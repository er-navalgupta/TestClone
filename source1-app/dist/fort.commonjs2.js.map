{"version":3,"sources":["webpack://Infinity/webpack/bootstrap","webpack://Infinity/./src/code/index.ts","webpack://Infinity/./src/code/abstracts/index.ts","webpack://Infinity/./src/code/abstracts/controller.ts","webpack://Infinity/./src/code/abstracts/shield.ts","webpack://Infinity/./src/code/abstracts/session_provider.ts","webpack://Infinity/./src/code/helpers/promise.ts","webpack://Infinity/./src/code/constant.ts","webpack://Infinity/external \"uniqid\"","webpack://Infinity/./src/code/global.ts","webpack://Infinity/./src/code/abstracts/guard.ts","webpack://Infinity/./src/code/abstracts/view_engine.ts","webpack://Infinity/./src/code/decorators/index.ts","webpack://Infinity/./src/code/decorators/declare_controller.ts","webpack://Infinity/./src/code/helpers/log_helper.ts","webpack://Infinity/./src/code/enums/error_type.ts","webpack://Infinity/./src/code/route_handler.ts","webpack://Infinity/./src/code/decorators/action.ts","webpack://Infinity/./src/code/decorators/shields.ts","webpack://Infinity/./src/code/decorators/guards.ts","webpack://Infinity/./src/code/decorators/route.ts","webpack://Infinity/./src/code/start.ts","webpack://Infinity/external \"http\"","webpack://Infinity/./src/code/util.ts","webpack://Infinity/./src/code/request_handler.ts","webpack://Infinity/external \"url\"","webpack://Infinity/external \"querystring\"","webpack://Infinity/./src/code/helpers/parse_cookie.ts","webpack://Infinity/./src/code/model/cookie_manager.ts","webpack://Infinity/./src/code/helpers/parse_match_route.ts","webpack://Infinity/./src/code/enums/file_extension.ts","webpack://Infinity/external \"path\"","webpack://Infinity/./src/code/file_handler.ts","webpack://Infinity/./src/code/helpers/file_helper.ts","webpack://Infinity/external \"fs\"","webpack://Infinity/./src/code/enums/http_status_code.ts","webpack://Infinity/./src/code/enums/mime_type.ts","webpack://Infinity/./src/code/enums/http_method.ts","webpack://Infinity/./src/code/request_handler_helper.ts","webpack://Infinity/./src/code/memory_session_provider.ts","webpack://Infinity/./src/code/model/index.ts","webpack://Infinity/./src/code/model/error_handler.ts","webpack://Infinity/./src/code/enums/index.ts","webpack://Infinity/./src/code/helpers/index.ts","webpack://Infinity/./src/code/helpers/view_result.ts","webpack://Infinity/./src/code/helpers/json_result.ts","webpack://Infinity/./src/code/helpers/text_result.ts","webpack://Infinity/./src/code/helpers/html_result.ts","webpack://Infinity/./src/code/helpers/render_view.ts"],"names":[],"mappings":"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","file":"fort.commonjs2.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export * from './abstracts/index';\r\nexport * from './decorators/index';\r\nexport * from './start';\r\nexport * from './interfaces/index';\r\nexport * from './enums';\r\nexport * from './helpers/index';\r\nexport * from './model/index';","export * from './controller';\r\nexport * from './shield';\r\nexport * from './session_provider';\r\nexport * from './guard';\r\nexport * from './view_engine';","import { IHttpRequest } from \"../interfaces/http_request\";\r\nimport { IHttpResponse } from \"../interfaces/http_response\";\r\nimport { SessionProvider } from \"./session_provider\";\r\nimport { CookieManager } from \"../model/cookie_manager\";\r\nexport abstract class Controller {\r\n    request: IHttpRequest;\r\n    response: IHttpResponse;\r\n    query: any;\r\n    body: any;\r\n    session: SessionProvider;\r\n    cookies: CookieManager;\r\n    params: any;\r\n\r\n    data: any;\r\n}","import { Controller } from \"./controller\";\r\nimport { IHttpRequest } from \"../interfaces/http_request\";\r\nimport { IHttpResponse } from \"../interfaces/http_response\";\r\nimport { SessionProvider } from \"./session_provider\";\r\nimport { CookieManager } from \"../model/cookie_manager\";\r\n\r\nexport abstract class Shield implements Controller {\r\n    request: IHttpRequest;\r\n    response: IHttpResponse;\r\n    query: object;\r\n    body: object;\r\n    session: SessionProvider;\r\n    cookies: CookieManager;\r\n    params: any;\r\n    data: any;\r\n    abstract protect(): Promise<boolean>;\r\n}\r\n\r\n","import { ISessionValue } from \"../interfaces/session_value\";\r\nimport { CookieManager } from \"../model/cookie_manager\";\r\nimport { promise } from \"../helpers/promise\";\r\nimport { App__Session__Identifier } from \"../constant\";\r\nimport * as getUniqId from \"uniqid\";\r\nimport { Global } from \"../global\";\r\n\r\nexport abstract class SessionProvider {\r\n\r\n    protected sessionId: string;\r\n    protected cookies: CookieManager;\r\n\r\n    abstract get(key: string): Promise<ISessionValue>;\r\n    abstract isExist(key: string): Promise<boolean>;\r\n    abstract getAll(): Promise<ISessionValue[]>;\r\n    abstract set(key: string, val: any): Promise<null>;\r\n    abstract setMany(values: ISessionValue[]): Promise<null>;\r\n    abstract remove(key: string): Promise<null>;\r\n\r\n    protected createSession(): Promise<null> {\r\n        return promise((resolve, reject) => {\r\n            const now = new Date();\r\n            this.sessionId = getUniqId();\r\n            this.cookies.addCookie({\r\n                name: App__Session__Identifier,\r\n                value: this.sessionId,\r\n                httpOnly: true,\r\n                path: \"/\",\r\n                expires: new Date(now.setMinutes(now.getMinutes() + Global.sessionTimeOut))\r\n            });\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\n","export function promise<T>(callBack: (resolve, reject) => void) {\r\n    return new Promise<T>(callBack);\r\n}","export const Content__Type = \"content-type\";\r\nexport const App__Name = \"infinity\";\r\nexport const App__Session__Identifier = \"infinity_session_id\";\r\nexport const Cookie = \"cookie\";\r\nexport const Set__Cookie = 'set-cookie';\r\nexport const Current__Directory = process.cwd();","module.exports = require(\"uniqid\");","import * as http from \"http\";\r\nimport { GenericSessionProvider } from \"./model/generic_session_provider\";\r\nimport { GenericWall } from \"./model/generic_wall\";\r\nimport { ViewEngine } from \"./abstracts/view_engine\";\r\nimport { ErrorHandler } from \"./model/error_handler\";\r\n\r\nexport class Global {\r\n    static request: http.IncomingMessage;\r\n    static response: http.ServerResponse;\r\n    static port: number;\r\n    static viewPath: string;\r\n    static shouldParseCookie: boolean;\r\n    static shouldParsePost: boolean;\r\n    static sessionProvider: typeof GenericSessionProvider;\r\n    static sessionTimeOut?: number;\r\n    static viewEngine: ViewEngine;\r\n    static foldersAllowed: string[];\r\n    static walls: typeof GenericWall[];\r\n    static errorHandler: typeof ErrorHandler;\r\n}","import { IHttpRequest } from \"../interfaces/http_request\";\r\nimport { IHttpResponse } from \"../interfaces/http_response\";\r\nimport { SessionProvider } from \"./session_provider\";\r\nimport { CookieManager } from \"../model/cookie_manager\";\r\nimport { Controller } from \"./controller\";\r\n\r\nexport abstract class Guard implements Controller {\r\n    request: IHttpRequest;\r\n    response: IHttpResponse;\r\n    query: object;\r\n    body: object;\r\n    session: SessionProvider;\r\n    cookies: CookieManager;\r\n    params: any;\r\n    data: any;\r\n    abstract check(): Promise<boolean>;\r\n}","import { IViewValue } from \"../interfaces/view_option\";\r\n\r\n\r\nexport abstract class ViewEngine {\r\n    abstract render(value: IViewValue): Promise<string>\r\n}","export * from \"./declare_controller\";\r\nexport * from './action';\r\nexport * from './shields';\r\nexport * from './guards';\r\nexport * from './route';","import { LogHelper } from \"../helpers/log_helper\";\r\nimport { RouteHandler } from \"../route_handler\";\r\nimport { GenericController } from \"../model/generic_controller\";\r\nimport { ERROR_TYPE } from \"../enums/error_type\";\r\n\r\nexport function declareController(path?: string): ClassDecorator {\r\n    return (target: any) => {\r\n        const className = target.name;\r\n        const classNameLower = className.toLowerCase();\r\n        if (path == null) {\r\n            if (classNameLower.endsWith('controller') === true) {\r\n                path = classNameLower.substr(0, classNameLower.length - 10);\r\n            }\r\n            else {\r\n                new LogHelper(ERROR_TYPE.InvalidControllerName, className).throw();\r\n            }\r\n        }\r\n        else {\r\n            path = path.toLowerCase();\r\n        }\r\n        RouteHandler.addToRouterCollection({\r\n            controller: target as typeof GenericController,\r\n            controllerName: className,\r\n            alias: path,\r\n            actions: [],\r\n            shields: []\r\n        })\r\n    };\r\n}","import { IError } from \"../interfaces/error\";\r\nimport { ERROR_TYPE } from \"../enums/error_type\";\r\n\r\n\r\n\r\nexport class LogHelper implements IError {\r\n    type: ERROR_TYPE;\r\n    message: string;\r\n    private info_: any;\r\n\r\n    constructor(type: ERROR_TYPE, info?: any) {\r\n        this.type = type;\r\n        this.info_ = info;\r\n        this.message = this.getMsg_();\r\n    }\r\n\r\n    throw() {\r\n        const errMsg = this.get();\r\n        throw JSON.stringify(errMsg);\r\n\r\n    }\r\n\r\n    static log(msg) {\r\n        console.log(msg);\r\n    }\r\n\r\n    logError() {\r\n        console.error(this.get());\r\n    }\r\n\r\n    logWarning() {\r\n        console.warn(this.get());\r\n    }\r\n\r\n    get() {\r\n        return {\r\n            message: this.message,\r\n            type: this.type\r\n        } as IError;\r\n    }\r\n\r\n    private getMsg_() {\r\n        let errMsg: string;\r\n        switch (this.type) {\r\n            case ERROR_TYPE.InvalidControllerName:\r\n                errMsg = `Invalid controller name - '${this.info_}'. Controller name must contain 'controller'.`\r\n                break;\r\n            case ERROR_TYPE.InvalidContentType:\r\n                errMsg = `Content type - '${this.info_}' is not valid. Please create an issue if you think this is valid type.`\r\n                break;\r\n            default:\r\n                errMsg = this.message;\r\n                break;\r\n        }\r\n        return errMsg;\r\n    }\r\n}","export enum ERROR_TYPE {\r\n    InvalidControllerName = \"invalid_controller_name\",\r\n    InvalidContentType = \"invalid_content_type\"\r\n}","\r\nimport { IRouteInfo } from \"./interfaces/route_info\";\r\nimport { GenericShield } from \"./model/generic_shield\";\r\nimport { IRouteActionInfo } from \"./interfaces/route_action_info\";\r\nimport { GenericGuard } from \"./model/generic_guard\";\r\n\r\nconst routerCollection: IRouteInfo[] = [];\r\nexport class RouteHandler {\r\n\r\n    static get routerCollection() {\r\n        return routerCollection;\r\n    }\r\n\r\n    static addToRouterCollection(value: IRouteInfo) {\r\n        const route = routerCollection.find(x => x.controllerName === value.controllerName);\r\n        if (route == null) {\r\n            routerCollection.push(value);\r\n        }\r\n        else {\r\n            route.controller = value.controller;\r\n            route.alias = value.alias;\r\n            route.actions.forEach(actionInfo => {\r\n                if (actionInfo.pattern.indexOf(value.alias) < 0) {\r\n                    actionInfo.pattern = `/${value.alias}/${actionInfo.pattern}`;\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    static addShields(shields: typeof GenericShield[], className: string) {\r\n        const index = routerCollection.findIndex(x => x.controllerName === className);\r\n        if (index < 0) {\r\n            routerCollection.push({\r\n                actions: [],\r\n                controller: null,\r\n                controllerName: className,\r\n                shields: shields,\r\n                alias: null\r\n            });\r\n        }\r\n        else {\r\n            routerCollection[index].shields = shields;\r\n        }\r\n    }\r\n\r\n    static addAction(newAction: IRouteActionInfo, className: string) {\r\n        const router = routerCollection.find(x => x.controllerName === className);\r\n        if (router == null) {\r\n            routerCollection.push({\r\n                actions: [newAction],\r\n                controller: null,\r\n                controllerName: className,\r\n                shields: [],\r\n                alias: null\r\n            });\r\n        }\r\n        else {\r\n            const savedAction = router.actions.find(val => val.action === newAction.action);\r\n            if (savedAction == null) {\r\n                newAction.pattern = router.alias == null ? newAction.pattern : `/${router.alias}/${newAction.pattern}`;\r\n                router.actions.push(newAction);\r\n            }\r\n            else {\r\n                savedAction.methodsAllowed = newAction.methodsAllowed;\r\n                savedAction.pattern = router.alias == null ? savedAction.pattern : `/${router.alias}/${savedAction.pattern}`;;\r\n            }\r\n        }\r\n    }\r\n\r\n    static addGuards(guards: typeof GenericGuard[], className: string, actionName: string) {\r\n        const index = routerCollection.findIndex(x => x.controllerName === className);\r\n        const pattern = actionName.toLowerCase();\r\n        if (index < 0) {\r\n            routerCollection.push({\r\n                actions: [{\r\n                    action: actionName,\r\n                    guards: guards,\r\n                    methodsAllowed: null,\r\n                    pattern: pattern\r\n                }],\r\n                controller: null,\r\n                controllerName: className,\r\n                shields: [],\r\n                alias: null\r\n            });\r\n        }\r\n        else {\r\n            const savedAction = routerCollection[index].actions.find(val => val.action === actionName);\r\n            if (savedAction == null) {\r\n                routerCollection[index].actions.push({\r\n                    action: actionName,\r\n                    guards: guards,\r\n                    methodsAllowed: null,\r\n                    pattern: pattern\r\n                });\r\n            }\r\n            else {\r\n                savedAction.guards = guards;\r\n            }\r\n        }\r\n    }\r\n\r\n    static addPattern(pattern: string, className: string, actionName: string) {\r\n        const router = routerCollection.find(x => x.controllerName === className);\r\n        if (router == null) {\r\n            routerCollection.push({\r\n                actions: [{\r\n                    action: actionName,\r\n                    guards: [],\r\n                    methodsAllowed: null,\r\n                    pattern: pattern\r\n                }],\r\n                controller: null,\r\n                controllerName: className,\r\n                shields: [],\r\n                alias: null\r\n            });\r\n        }\r\n        else {\r\n            const savedAction = router.actions.find(val => val.action === actionName);\r\n            pattern = router.alias == null ? pattern : `/${router.alias}/${pattern}`;\r\n            if (savedAction == null) {\r\n                router.actions.push({\r\n                    action: actionName,\r\n                    guards: [],\r\n                    methodsAllowed: null,\r\n                    pattern: pattern\r\n                });\r\n            }\r\n            else {\r\n                savedAction.pattern = pattern;\r\n            }\r\n        }\r\n    }\r\n}","import { HTTP_METHOD } from \"../enums\";\r\nimport { RouteHandler } from \"../route_handler\";\r\nimport { IRouteActionInfo } from \"../interfaces/route_action_info\";\r\n\r\nexport function action(allowedMethods?: HTTP_METHOD[]): MethodDecorator {\r\n    return function (target: any, methodName: string, descriptor: PropertyDescriptor) {\r\n        const className = (target.constructor.name as string);\r\n        const actionInfo: IRouteActionInfo = {\r\n            action: methodName,\r\n            methodsAllowed: allowedMethods,\r\n            guards: [],\r\n            pattern: methodName.toLowerCase()\r\n        };\r\n        RouteHandler.addAction(actionInfo, className);\r\n    }\r\n}\r\n","import { Shield } from \"../abstracts\";\r\nimport { RouteHandler } from \"../route_handler\";\r\nimport { GenericShield } from \"../model/generic_shield\";\r\n\r\nexport function shields(shields: typeof Shield[]): ClassDecorator {\r\n    return (target: any) => {\r\n        const className = target.name;\r\n        RouteHandler.addShields(shields as typeof GenericShield[], className);\r\n    };\r\n}","import { RouteHandler } from \"../route_handler\";\r\nimport { GenericGuard } from \"../model/generic_guard\";\r\nimport { Guard } from \"../abstracts/guard\";\r\n\r\nexport function guards(guards: typeof Guard[]): MethodDecorator {\r\n    return (function (target: any, methodName: string, descriptor: PropertyDescriptor) {\r\n        const className = (target.constructor.name as string);\r\n        RouteHandler.addGuards(guards as typeof GenericGuard[], className, methodName);\r\n    })\r\n}","import { RouteHandler } from \"../route_handler\";\r\n\r\nexport function route(format: string): MethodDecorator {\r\n    return (function (target: any, methodName: string, descriptor: PropertyDescriptor) {\r\n        const className = (target.constructor.name as string);\r\n        RouteHandler.addPattern(format,className,methodName);\r\n    })\r\n}","import * as http from \"http\";\r\nimport { Global } from \"./global\";\r\nimport { Util } from \"./util\";\r\nimport { RequestHandler } from \"./request_handler\";\r\nimport { IAppOption } from \"./interfaces/app_option\";\r\nimport { MemorySessionProvider } from \"./memory_session_provider\";\r\nimport { GenericSessionProvider } from \"./model/generic_session_provider\";\r\nimport { GenericWall } from \"./model/generic_wall\";\r\nimport { ErrorHandler } from \"./model\";\r\n\r\n\r\nexport function start(option: IAppOption) {\r\n    if (!Util.isNull(option)) {\r\n        Global.port = Util.isNull(option.port) ? 4000 : option.port;\r\n        Global.viewEngine = new (option.viewEngine as any)();\r\n        Global.shouldParseCookie = Util.isNull(option.shouldParseCookie) ? true : option.shouldParseCookie;\r\n        Global.shouldParsePost = Util.isNull(option.shouldParsePost) ? true : option.shouldParsePost;\r\n        Global.sessionProvider = Util.isNull(option.sessionProvider) ? MemorySessionProvider as any : option.sessionProvider as typeof GenericSessionProvider;\r\n        Global.sessionTimeOut = Util.isNull(option.sessionTimeOut) ? 60 : option.sessionTimeOut;\r\n        Global.foldersAllowed = Util.isNull(option.foldersAllowed) ? [] : option.foldersAllowed;\r\n        Global.walls = Util.isNull(option.walls) ? [] : option.walls as typeof GenericWall[];\r\n        Global.errorHandler = Util.isNull(option.errorHandler) ? ErrorHandler : option.errorHandler;\r\n    }\r\n    http.createServer((req, res) => {\r\n        new RequestHandler(req, res).handle();\r\n    }).listen(Global.port);\r\n}\r\n\r\n","module.exports = require(\"http\");","export class Util {\r\n    static isNull(value) {\r\n        return value == null;\r\n    }\r\n\r\n    static isNullOrEmpty(value: string) {\r\n        return value == null || value.length === 0;\r\n    }\r\n\r\n    static isUnDefined(value) {\r\n        return typeof value === \"undefined\";\r\n    }\r\n}","import * as http from \"http\";\r\nimport * as url from 'url';\r\nimport { Controller } from \"./abstracts/controller\";\r\nimport { Content__Type, App__Name, Cookie, App__Session__Identifier, Set__Cookie } from \"./constant\";\r\nimport * as qs from 'querystring';\r\nimport { Global } from \"./global\";\r\nimport { IHttpRequest } from \"./interfaces/http_request\";\r\nimport { parseCookie } from \"./helpers/parse_cookie\";\r\nimport { CookieManager } from \"./model/cookie_manager\";\r\nimport { IHttpResponse } from \"./interfaces/http_response\";\r\nimport { GenericSessionProvider } from \"./model/generic_session_provider\";\r\nimport { GenericGuard } from \"./model/generic_guard\";\r\nimport { parseAndMatchRoute } from \"./helpers/parse_match_route\";\r\nimport { IRouteMatch } from \"./interfaces/route_match\";\r\nimport * as path from 'path';\r\nimport { Util } from \"./util\";\r\nimport { FileHandler } from \"./file_handler\";\r\nimport { MIME_TYPE } from \"./enums/mime_type\";\r\nimport { HTTP_METHOD } from \"./enums/http_method\";\r\nimport { IActionResult } from \"./interfaces/action_result\";\r\nimport { RequestHandlerHelper } from \"./request_handler_helper\";\r\n\r\nexport class RequestHandler extends RequestHandlerHelper {\r\n    private body_: any;\r\n    private cookieManager_: CookieManager;\r\n    private session_: GenericSessionProvider;\r\n    private query_: any;\r\n    private data_ = {};\r\n    private routeMatchInfo_: IRouteMatch;\r\n\r\n    constructor(request: http.IncomingMessage, response: http.ServerResponse) {\r\n        super();\r\n        this.request = request;\r\n        this.response = response;\r\n        this.registerEvents();\r\n    }\r\n\r\n    private registerEvents() {\r\n        this.request.on('error', this.onBadRequest);\r\n        this.response.on('error', (err) => {\r\n            this.onErrorOccured(err);\r\n        });\r\n    }\r\n\r\n    private handlePostData_() {\r\n        const body = [];\r\n        let postData;\r\n        return new Promise((resolve, reject) => {\r\n            this.request.on('data', (chunk) => {\r\n                body.push(chunk);\r\n            }).on('end', () => {\r\n                const bodyBuffer = Buffer.concat(body);\r\n                try {\r\n                    const contentType = this.request.headers[Content__Type];\r\n                    switch (contentType) {\r\n                        case MIME_TYPE.Json:\r\n                            postData = JSON.parse(bodyBuffer.toString()); break;\r\n                        case MIME_TYPE.Text:\r\n                        case MIME_TYPE.Html:\r\n                            postData = bodyBuffer.toString(); break;\r\n                        case MIME_TYPE.Form_Url_Encoded:\r\n                            postData = qs.parse(bodyBuffer.toString()); break;\r\n\r\n                    }\r\n                    resolve(postData);\r\n                }\r\n                catch (ex) {\r\n                    reject(ex);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    private executeWallBlock_() {\r\n        const wallsPromise = [];\r\n        Global.walls.forEach(wall => {\r\n            var wallObj = new wall();\r\n            wallObj.body = this.body_;\r\n            wallObj.cookies = this.cookieManager_;\r\n            wallObj.query = this.query_;\r\n            wallObj.session = this.session_;\r\n            wallObj.request = this.request as IHttpRequest;\r\n            wallObj.response = this.response as IHttpResponse;\r\n            wallObj.data = this.data_;\r\n            wallsPromise.push(wallObj.block());\r\n        });\r\n        return Promise.all(wallsPromise);\r\n    }\r\n\r\n    private runController_() {\r\n        var controllerObj: Controller = new this.routeMatchInfo_.controller();\r\n        controllerObj.request = this.request as IHttpRequest;\r\n        controllerObj.response = this.response;\r\n        controllerObj.query = this.query_;\r\n        controllerObj.body = this.body_;\r\n        controllerObj.session = this.session_;\r\n        controllerObj.cookies = this.cookieManager_;\r\n        controllerObj.params = this.routeMatchInfo_.params;\r\n        controllerObj.data = this.data_;\r\n        controllerObj[this.routeMatchInfo_.actionInfo.action]().then((result: IActionResult) => {\r\n            if (this.cookieManager_ != null) {\r\n                ((this.cookieManager_ as any).responseCookie_ as string[]).forEach(value => {\r\n                    this.response.setHeader(Set__Cookie, value);\r\n                });\r\n            }\r\n            this.response.writeHead(result.statusCode,\r\n                { [Content__Type]: result.contentType });\r\n            this.response.end(result.responseData);\r\n        }).catch(this.onErrorOccured.bind(this))\r\n    }\r\n\r\n    private executeShieldsProtection_() {\r\n        const shieldsPromise = [];\r\n        this.routeMatchInfo_.shields.forEach(shield => {\r\n            var shieldObj = new shield();\r\n            shieldObj.body = this.body_;\r\n            shieldObj.cookies = this.cookieManager_;\r\n            shieldObj.query = this.query_;\r\n            shieldObj.session = this.session_;\r\n            shieldObj.request = this.request as IHttpRequest;\r\n            shieldObj.response = this.response as IHttpResponse;\r\n            shieldObj.data = this.data_;\r\n            shieldsPromise.push(shieldObj.protect());\r\n        });\r\n        return Promise.all(shieldsPromise);\r\n    }\r\n\r\n    private executeGuardsCheck_(guards: typeof GenericGuard[]) {\r\n        const guardPromise = [];\r\n        guards.forEach(guard => {\r\n            const guardObj = new guard();\r\n            guardObj.body = this.body_;\r\n            guardObj.cookies = this.cookieManager_;\r\n            guardObj.query = this.query_;\r\n            guardObj.session = this.session_;\r\n            guardObj.request = this.request as IHttpRequest;\r\n            guardObj.response = this.response as IHttpResponse;\r\n            guardObj.data = this.data_;\r\n            guardPromise.push(guardObj.check());\r\n        });\r\n        return Promise.all(guardPromise);\r\n    }\r\n\r\n    private execute_() {\r\n        try {\r\n            this.response.setHeader('X-Powered-By', App__Name);\r\n            this.executeWallBlock_().then(wallProtectionResult => {\r\n                const isRejectedByWall = wallProtectionResult.indexOf(false) >= 0;\r\n                if (isRejectedByWall === false) {\r\n                    const urlDetail = url.parse(this.request.url, true);\r\n                    let pathUrl = urlDetail.pathname.toLowerCase();\r\n                    const extension = path.parse(pathUrl).ext;\r\n                    if (!Util.isNullOrEmpty(extension)) {\r\n                        const fileHandlerObj = new FileHandler(pathUrl, extension);\r\n                        fileHandlerObj.execute().then(result => {\r\n                            this.response.writeHead(result.statusCode, { [Content__Type]: result.contentType });\r\n                            this.response.end(result.responseData);\r\n                        }).catch(this.onErrorOccured.bind(this));\r\n                    }\r\n                    else {\r\n                        this.routeMatchInfo_ = parseAndMatchRoute(pathUrl);\r\n                        if (this.routeMatchInfo_ == null) {\r\n                            this.onNotFound();\r\n                        }\r\n                        else {\r\n                            const requestType = this.request.method as HTTP_METHOD;\r\n                            const actionInfo = this.routeMatchInfo_.actionInfo;\r\n                            if (actionInfo.methodsAllowed != null && actionInfo.methodsAllowed.indexOf(requestType) < 0) {\r\n                                this.onMethodNotAllowed(actionInfo.methodsAllowed);\r\n                            }\r\n                            else {\r\n                                this.query_ = urlDetail.query;\r\n                                if (Global.shouldParseCookie === true) {\r\n                                    const rawCookie = this.request.headers[Cookie] as string;\r\n                                    const parsedCookies = parseCookie(rawCookie);\r\n                                    this.session_ = new Global.sessionProvider();\r\n                                    this.cookieManager_ = new CookieManager(parsedCookies);\r\n                                    this.session_.sessionId = parsedCookies[App__Session__Identifier];\r\n                                    this.session_.cookies = this.cookieManager_;\r\n                                }\r\n                                this.executeShieldsProtection_().then((shieldProtectionResult: Boolean[]) => {\r\n                                    const isRejectedByShield = shieldProtectionResult.indexOf(false) >= 0;\r\n                                    if (isRejectedByShield === false) {\r\n                                        this.executeGuardsCheck_(actionInfo.guards).then(guardsCheckResult => {\r\n                                            const isRejectedByGuard = guardsCheckResult.indexOf(false) >= 0;\r\n                                            if (isRejectedByGuard === false) {\r\n                                                this.runController_();\r\n                                            }\r\n                                            else {\r\n                                                this.onForbiddenRequest();\r\n                                            }\r\n                                        }).catch(this.onErrorOccured.bind(this));\r\n                                    }\r\n                                    else {\r\n                                        this.onForbiddenRequest();\r\n                                    }\r\n                                }).catch(this.onErrorOccured.bind(this));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this.onForbiddenRequest();\r\n                }\r\n            }).catch(this.onErrorOccured.bind(this));\r\n        }\r\n        catch (ex) {\r\n            this.onErrorOccured(ex);\r\n        }\r\n    }\r\n\r\n    handle() {\r\n        if (this.request.method === HTTP_METHOD.Get) {\r\n            this.execute_();\r\n        }\r\n        else if (Global.shouldParsePost === true) {\r\n            this.handlePostData_().then(body => {\r\n                this.body_ = body;\r\n                this.execute_();\r\n            }).catch((err) => {\r\n                this.onBadRequest(err);\r\n            })\r\n        }\r\n    }\r\n}","module.exports = require(\"url\");","module.exports = require(\"querystring\");","import { Util } from \"../util\";\r\n\r\n\r\nexport function parseCookie(cookie: string): object {\r\n    const value = {};\r\n    if (!Util.isNullOrEmpty(cookie)) {\r\n        cookie.split(';').forEach(function (val) {\r\n            var parts = val.split('=');\r\n            value[parts.shift().trim()] = decodeURI(parts.join('='));\r\n        });\r\n    }\r\n    return value;\r\n}","import { HttpCookie } from \"./http_cookie\";\r\nimport { IHttpCookie } from \"../interfaces/http_cookie\";\r\n\r\nexport class CookieManager {\r\n    private responseCookie_: string[] = [];\r\n    private cookieCollection_: object;\r\n\r\n    constructor(parsedValue: object) {\r\n        this.cookieCollection_ = parsedValue;\r\n    }\r\n\r\n    /**\r\n     * return cookie by name\r\n     *\r\n     * @param {string} name\r\n     * @returns\r\n     * @memberof CookieManager\r\n     */\r\n    getCookie(name: string): HttpCookie {\r\n        return {\r\n            name: name,\r\n            value: this.cookieCollection_[name]\r\n        } as IHttpCookie;\r\n    }\r\n\r\n    /**\r\n     * add cookie\r\n     *\r\n     * @param {HttpCookie} cookie\r\n     * @memberof CookieManager\r\n     */\r\n    addCookie(cookie: HttpCookie) {\r\n        this.cookieCollection_[cookie.name] = cookie.value;\r\n        this.responseCookie_.push(this.getCookieStringFromCookie_(cookie));\r\n    }\r\n\r\n    /**\r\n     * remove cookie\r\n     *\r\n     * @param {string} name\r\n     * @memberof CookieManager\r\n     */\r\n    removeCookie(name: string) {\r\n        this.cookieCollection_[name] = null;\r\n        const now = new Date();\r\n        this.responseCookie_.push(this.getCookieStringFromCookie_({\r\n            name: name,\r\n            value: null,\r\n            expires: new Date(now.setMinutes(now.getMinutes() - 100))\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * collection of http cookie\r\n     *\r\n     * @readonly\r\n     * @memberof CookieManager\r\n     */\r\n    get cookieCollection() {\r\n        return this.cookieCollection_;\r\n    }\r\n\r\n    /**\r\n     * determine whether value exist or not\r\n     *\r\n     * @param {string} name\r\n     * @returns\r\n     * @memberof CookieManager\r\n     */\r\n    isExist(name: string) {\r\n        return this.cookieCollection_[name] != null;\r\n    }\r\n\r\n    private getCookieStringFromCookie_(cookie: HttpCookie) {\r\n        let cookieString = `${cookie.name}=${cookie.value};`\r\n        if (cookie.expires) {\r\n            cookieString += ` Expires =${cookie.expires.toUTCString()};`\r\n        }\r\n        if (cookie.httpOnly === true) {\r\n            cookieString += \" HttpOnly;\"\r\n        }\r\n        if (cookie.maxAge != null) {\r\n            cookieString += ` Max-Age=${cookie.maxAge}`;\r\n        }\r\n        if (cookie.path) {\r\n            cookieString += ` Path=${cookie.path};`\r\n        }\r\n        if (cookie.domain) {\r\n            cookieString += ` Domain=${cookie.path};`\r\n        }\r\n        return cookieString;\r\n    }\r\n}","import { RouteHandler } from \"../route_handler\";\r\nimport { IRouteMatch } from \"../interfaces/route_match\";\r\nimport { File_Extension } from \"../enums/file_extension\";\r\n\r\nfunction isRequestFileType(urlParts: string[]) {\r\n    const splitByDotValues = urlParts[urlParts.length - 1].split(\".\");\r\n    const fileExtension = splitByDotValues[splitByDotValues.length - 1];\r\n    return File_Extension[fileExtension] == null ? false : true;\r\n}\r\n\r\nexport function parseAndMatchRoute(url: string) {\r\n    let isMatched: boolean = false;\r\n    const urlLength = url.length;\r\n    if (url[urlLength - 1] === \"/\") {\r\n        url = url.substr(0, urlLength - 1);\r\n    }\r\n    const urlParts = url.split(\"/\");\r\n    let routeMatch: IRouteMatch = {\r\n        isRequestTypeFile: isRequestFileType(urlParts)\r\n    } as IRouteMatch;\r\n    if (routeMatch.isRequestTypeFile === true) {\r\n        return routeMatch;\r\n    }\r\n    else {\r\n        const firstPart = urlParts[1];\r\n        RouteHandler.routerCollection.every(route => {\r\n            if (route.alias === firstPart) {\r\n                const urlPartLength = urlParts.length;\r\n                isMatched = true;\r\n                routeMatch.controller = route.controller;\r\n                route.actions.every(routeActionInfo => {\r\n                    const patternSplit = routeActionInfo.pattern.split(\"/\");\r\n                    if (urlPartLength === patternSplit.length) {\r\n                        isMatched = true;\r\n                        const params = {};\r\n                        urlParts.every((urlPart, i) => {\r\n                            const regMatch = patternSplit[i].match(/{(.*)}/);\r\n                            if (regMatch != null) {\r\n                                params[regMatch[1]] = urlPart;\r\n                            }\r\n                            else if (urlPart !== patternSplit[i]) {\r\n                                isMatched = false;\r\n                                return false;\r\n                            }\r\n                            return true;\r\n                        });\r\n                        if (isMatched === true) {\r\n                            routeMatch.actionInfo = routeActionInfo;\r\n                            routeMatch.params = params;\r\n                            routeMatch.shields = route.shields;\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        isMatched = false;\r\n                    }\r\n                    return true;\r\n                });\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        return isMatched ? routeMatch : null;\r\n    }\r\n}","export enum File_Extension {\r\n    Ico = \".ico\",\r\n    Html = \".html\",\r\n    Js = \".js\",\r\n    Json = \".json\",\r\n    Css = \".css\",\r\n    Png = \".png\",\r\n    Jpg = \".jpg\",\r\n    Wav = \".wav\",\r\n    Mp3 = \".mp3\",\r\n    Svg = \".svg\",\r\n    Pdf = \".pdf\",\r\n    Doc = \".doc\",\r\n    Eot = \".eot\",\r\n    Ttf = \".ttf\"\r\n}","module.exports = require(\"path\");","import { promise } from \"./helpers/promise\";\r\nimport { FileHelper } from \"./helpers/file_helper\";\r\nimport { HTTP_STATUS_CODE } from \"./enums/http_status_code\";\r\nimport { Global } from \"./global\";\r\nimport * as path from \"path\";\r\nimport { Current__Directory } from \"./constant\";\r\nimport { MIME_TYPE } from \"./enums/mime_type\";\r\nimport { IActionResult } from \"./interfaces/action_result\";\r\nexport class FileHandler {\r\n\r\n    // path: string;\r\n    extension: string;\r\n    //folderRequired: string;\r\n    relativeFilePath: string;\r\n    constructor(filePath: string, extension: string) {\r\n\r\n        // extract URL path\r\n        // Avoid https://en.wikipedia.org/wiki/Directory_traversal_attack\r\n        // e.g curl --path-as-is http://localhost:9000/../fileInDanger.txt\r\n        // by limiting the path to current directory only\r\n        // console.log(\"dirname\", __dirname);\r\n        //console.log(\"filePath\", filePath);\r\n        this.relativeFilePath = filePath;\r\n        // this.folderRequired = this.getRequiredFolder_(filePath);\r\n        // this.path = path.join(Current__Directory, filePath);\r\n        //.normalize(path).replace(/^(\\.\\.[\\/\\\\])+/, '');\r\n        this.extension = extension.substr(1);\r\n    }\r\n\r\n    private getRequiredFolder_(path: string) {\r\n        const splittedValue = path.split(\"/\");\r\n        if (splittedValue.length > 2) {\r\n            return splittedValue[1];\r\n        }\r\n        return \"/\";\r\n    }\r\n\r\n    execute(): Promise<IActionResult> {\r\n        return promise((resolve, reject) => {\r\n            const folderRequired = this.getRequiredFolder_(this.relativeFilePath);\r\n            if (Global.foldersAllowed.findIndex(qry => qry === folderRequired) >= 0) {\r\n                let absolutePath = path.join(Current__Directory, this.relativeFilePath);\r\n                FileHelper.isPathExist(absolutePath).then(isExist => {\r\n                    if (isExist === true) {\r\n                        FileHelper.isDirectory(absolutePath).then(isDirectory => {\r\n                            if (isDirectory === true) {\r\n                                absolutePath += '/index.html';\r\n                            }\r\n                            FileHelper.readFile(absolutePath).then(data => {\r\n                                resolve({\r\n                                    statusCode: HTTP_STATUS_CODE.Ok,\r\n                                    contentType: MIME_TYPE[this.extension] || MIME_TYPE.Text,\r\n                                    responseData: data\r\n                                } as IActionResult);\r\n                            }).catch(reject)\r\n                        }).catch(reject);\r\n                    }\r\n                    else {\r\n                        resolve({\r\n                            statusCode: HTTP_STATUS_CODE.Not_Found,\r\n                            contentType: MIME_TYPE.Text,\r\n                            responseData: `File ${this.relativeFilePath} not found`\r\n                        } as IActionResult);\r\n                    }\r\n\r\n                }).catch(reject);\r\n            }\r\n            else {\r\n                resolve({\r\n                    statusCode: HTTP_STATUS_CODE.Not_Found,\r\n                    contentType: MIME_TYPE.Text,\r\n                    responseData: `File ${this.relativeFilePath} not found`\r\n                } as IActionResult);\r\n            }\r\n        });\r\n    }\r\n}","import * as fs from \"fs\";\r\nimport { promise } from \"./promise\";\r\n\r\nexport class FileHelper {\r\n\r\n    static isPathExist(path: string): Promise<boolean> {\r\n        return promise((resolve, reject) => {\r\n            try {\r\n                fs.exists(path, (isExist) => {\r\n                    resolve(isExist);\r\n                })\r\n            }\r\n            catch (ex) {\r\n                reject(ex);\r\n            }\r\n        })\r\n    }\r\n\r\n    static isDirectory(path: string): Promise<boolean> {\r\n        return promise((resolve, reject) => {\r\n            try {\r\n                fs.lstat(path, (err, status) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        resolve(status.isDirectory());\r\n                    }\r\n                })\r\n            }\r\n            catch (ex) {\r\n                reject(ex);\r\n            }\r\n        })\r\n    }\r\n\r\n    static readFile(path: string): Promise<string> {\r\n        return promise((resolve, reject) => {\r\n            try {\r\n                fs.readFile(path, (err, data) => {\r\n                    if (err) {\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        resolve(data);\r\n                    }\r\n                })\r\n            }\r\n            catch (ex) {\r\n                reject(ex);\r\n            }\r\n        })\r\n    }\r\n}\r\n","module.exports = require(\"fs\");","export enum HTTP_STATUS_CODE {\r\n    Not_Found = 404,\r\n    Ok = 200,\r\n    Internal_Server_Error = 500,\r\n    Bad_Request = 400,\r\n    MethodNotAllowed = 405,\r\n    Forbidden = 403\r\n}","export enum MIME_TYPE {\r\n    Text = \"text/plain\",\r\n    Json = \"application/json\",\r\n    Html = \"text/html\",\r\n    Form_Url_Encoded = \"application/x-www-form-urlencoded\"\r\n}","export enum HTTP_METHOD {\r\n    Get = \"GET\",\r\n    POST = \"POST\",\r\n    PUT = \"PUT\",\r\n    PATCH = \"PATCH\"\r\n}","import { HTTP_STATUS_CODE } from \"./enums/http_status_code\";\r\nimport * as http from \"http\";\r\nimport { Content__Type } from \"./constant\";\r\nimport { MIME_TYPE } from \"./enums/mime_type\";\r\nimport { HTTP_METHOD } from \"./enums/http_method\";\r\nimport { Global } from \"./global\";\r\nexport class RequestHandlerHelper {\r\n    protected response: http.ServerResponse;\r\n\r\n    protected request: http.IncomingMessage;\r\n    protected onBadRequest(error) {\r\n        if (this.response.headersSent === false) {\r\n            this.response.writeHead(HTTP_STATUS_CODE.Bad_Request, { [Content__Type]: MIME_TYPE.Html });\r\n            let errMessage = `<h1>Bad Request</h1>\r\n        <h3>message : ${error.message}</h3>`;\r\n            if (error.stack) {\r\n                errMessage += `<p><b>stacktrace:</b> ${error.stack}</p>`\r\n            }\r\n            else if (error.type) {\r\n                errMessage += `<p><b>type:</b> ${error.type}</p>`\r\n            }\r\n            this.response.end(errMessage);\r\n        }\r\n    }\r\n\r\n    protected onForbiddenRequest() {\r\n        if (this.response.headersSent === false) {\r\n            this.response.writeHead(HTTP_STATUS_CODE.Forbidden, { [Content__Type]: MIME_TYPE.Html });\r\n            // let errMessage = `<h1>Forbidden</h1>`\r\n            // this.response.end(errMessage);\r\n            new Global.errorHandler().onForbiddenRequest().then(errMessage => {\r\n                this.response.end(errMessage);\r\n            }).catch(err => {\r\n                this.response.end(JSON.stringify(err));\r\n            })\r\n        }\r\n    }\r\n\r\n    protected onNotFound() {\r\n        if (this.response.headersSent === false) {\r\n            this.response.writeHead(HTTP_STATUS_CODE.Not_Found, { [Content__Type]: MIME_TYPE.Text });\r\n            this.response.end(`The requested resource ${this.request.url} was not found.`);\r\n        }\r\n    }\r\n\r\n    protected onMethodNotAllowed(allowedMethods: HTTP_METHOD[]) {\r\n        if (this.response.headersSent === false) {\r\n            this.response.setHeader(\"Allow\", allowedMethods.join(\",\"));\r\n            this.response.writeHead(HTTP_STATUS_CODE.MethodNotAllowed, { [Content__Type]: MIME_TYPE.Text });\r\n            this.response.end(`Not allowed.`);\r\n        }\r\n    }\r\n\r\n    protected onErrorOccured(error) {\r\n        if (this.response.headersSent === false) {\r\n            this.response.writeHead(HTTP_STATUS_CODE.Internal_Server_Error, { [Content__Type]: MIME_TYPE.Html });\r\n            // let errMessage = `<h1>internal server error</h1>\r\n            // <h3>message : ${error.message}</h3>`;\r\n            // if (error.stack) {\r\n            //     errMessage += `<p><b>stacktrace:</b> ${error.stack}</p>`\r\n            // }\r\n            // else if (error.type) {\r\n            //     errMessage += `<p><b>type:</b> ${error.type}</p>`\r\n            // }\r\n            // this.response.end(errMessage);\r\n            new Global.errorHandler().onServerError(error).then(result => {\r\n                this.response.end(result);\r\n            }).catch(err => {\r\n                this.response.end(JSON.stringify(err));\r\n            })\r\n        }\r\n        else {\r\n            console.error(error);\r\n        }\r\n    }\r\n}","import { SessionProvider } from \"./abstracts\";\r\nimport { ISessionValue } from \"./interfaces/session_value\";\r\nimport { promise } from \"./helpers/promise\";\r\n\r\ninterface ISessionValueFormat {\r\n    identifier: string;\r\n    datas: ISessionValue[]\r\n}\r\n\r\nconst sessionValues: ISessionValueFormat[] = [];\r\n\r\nexport class MemorySessionProvider extends SessionProvider {\r\n\r\n    get(key: string): Promise<ISessionValue> {\r\n        return promise<null>((resolve, reject) => {\r\n            const savedValue = sessionValues.find(q => q.identifier === this.sessionId);\r\n            if (savedValue == null) {\r\n                resolve(false);\r\n            }\r\n            else {\r\n                const value = savedValue.datas.find(qry => qry.key === key);\r\n                resolve(value);\r\n            }\r\n        });\r\n    }\r\n\r\n    isExist(key: string): Promise<boolean> {\r\n        return promise<null>((resolve, reject) => {\r\n            const savedValue = sessionValues.find(q => q.identifier === this.sessionId);\r\n            if (savedValue == null) {\r\n                resolve(false);\r\n            }\r\n            else {\r\n                const index = savedValue.datas.findIndex(qry => qry.key === key);\r\n                resolve(index >= 0);\r\n            }\r\n        });\r\n    }\r\n\r\n    getAll(): Promise<ISessionValue[]> {\r\n        return promise<null>((resolve, reject) => {\r\n            const savedValue = sessionValues.find(q => q.identifier === this.sessionId);\r\n            resolve(savedValue == null ? [] : savedValue.datas);\r\n        });\r\n    }\r\n\r\n    set(key: string, val: any): Promise<null> {\r\n        return promise<null>((resolve, reject) => {\r\n            const savedValue = sessionValues.find(q => q.identifier === this.sessionId);\r\n            if (savedValue == null) {\r\n                this.createSession().then(() => {\r\n                    sessionValues.push({\r\n                        identifier: this.sessionId,\r\n                        datas: [{\r\n                            key: key,\r\n                            value: val\r\n                        }]\r\n                    })\r\n                });\r\n            }\r\n            else {\r\n                savedValue.datas.push({\r\n                    key: key,\r\n                    value: val\r\n                })\r\n            }\r\n            // this.createSession().then(sessionId => {\r\n            //     if (sessionId == null) { // session already created\r\n            //         const index = sessionValues.findIndex(q => q.identifier === this.sessionId);\r\n            //         if (index >= 0) {\r\n            //             const savedValue = sessionValues[index];\r\n            //             savedValue.datas.push({\r\n            //                 key: key,\r\n            //                 value: val\r\n            //             })\r\n            //         }\r\n            //         resolve(null);\r\n            //     }\r\n            //     else { // session created\r\n\r\n            //         this.sessionId = sessionId;\r\n            //         sessionValues.push({\r\n            //             identifier: this.sessionId,\r\n            //             datas: [{\r\n            //                 key: key,\r\n            //                 value: val\r\n            //             }]\r\n            //         })\r\n            //     }\r\n            // });\r\n        });\r\n    }\r\n\r\n    setMany(values: ISessionValue[]) {\r\n        return promise<null>((resolve, reject) => {\r\n            const promises: Promise<null>[] = [];\r\n            values.forEach(value => {\r\n                promises.push(this.set(value.key, value.value));\r\n            })\r\n            Promise.all(promises).then(results => {\r\n                resolve();\r\n            }).catch(reject);\r\n        });\r\n    }\r\n\r\n    remove(key: string): Promise<null> {\r\n        return promise<null>((resolve, reject) => {\r\n            const savedValue = sessionValues.find(q => q.identifier === this.sessionId);\r\n            if (savedValue != null) {\r\n                const index = savedValue.datas.findIndex(q => q.key === key);\r\n                savedValue.datas.splice(index, 1);\r\n            }\r\n            resolve(null);\r\n        });\r\n    }\r\n}","export * from './error_handler';","import { IException } from \"../interfaces/exception\";\r\nimport { promise } from \"../helpers/promise\";\r\n\r\nexport class ErrorHandler {\r\n    onServerError(ex: IException): Promise<string> {\r\n        return promise<string>((resolve, reject) => {\r\n            let errMessage = `<h1>internal server error</h1>\r\n            <h3>message : ${ex.message}</h3>`;\r\n            if (ex.stack) {\r\n                errMessage += `<p><b>stacktrace:</b> ${ex.stack}</p>`\r\n            }\r\n            if (ex.type) {\r\n                errMessage += `<p><b>type:</b> ${ex.type}</p>`\r\n            }\r\n            resolve(errMessage);\r\n        });\r\n    }\r\n\r\n    onForbiddenRequest(): Promise<string> {\r\n        return promise<string>((resolve, reject) => {\r\n            let errMessage = `<h1>We are sorry, but you are not allowed access to this resource.</h1>`;\r\n            resolve(errMessage);\r\n        });\r\n    }\r\n}","export * from './mime_type';\r\nexport * from './http_method';","export * from './view_result';\r\nexport * from './json_result';\r\nexport * from './text_result';\r\nexport * from './html_result';\r\nexport * from './render_view';","import { IActionResult } from \"../interfaces/action_result\";\r\nimport { MIME_TYPE } from \"../enums\";\r\nimport { HTTP_STATUS_CODE } from \"../enums/http_status_code\";\r\n\r\nexport function viewResult(vieWData: string) {\r\n    return {\r\n        contentType: MIME_TYPE.Html,\r\n        responseData: vieWData,\r\n        statusCode: HTTP_STATUS_CODE.Ok\r\n    } as IActionResult;\r\n}","import { IActionResult } from \"../interfaces/action_result\";\r\nimport { MIME_TYPE } from \"../enums\";\r\nimport { HTTP_STATUS_CODE } from \"../enums/http_status_code\";\r\n\r\nexport function jsonResult(value: any) {\r\n    return {\r\n        contentType: MIME_TYPE.Json,\r\n        responseData: JSON.stringify(value),\r\n        statusCode: HTTP_STATUS_CODE.Ok\r\n    } as IActionResult;\r\n}","import { IActionResult } from \"../interfaces/action_result\";\r\nimport { MIME_TYPE } from \"../enums\";\r\nimport { HTTP_STATUS_CODE } from \"../enums/http_status_code\";\r\n\r\nexport function textResult(text: string) {\r\n    return {\r\n        contentType: MIME_TYPE.Text,\r\n        responseData: text,\r\n        statusCode: HTTP_STATUS_CODE.Ok\r\n    } as IActionResult;\r\n}","import { IActionResult } from \"../interfaces/action_result\";\r\nimport { MIME_TYPE } from \"../enums\";\r\nimport { HTTP_STATUS_CODE } from \"../enums/http_status_code\";\r\n\r\nexport function htmlResult(html: string) {\r\n    return {\r\n        contentType: MIME_TYPE.Html,\r\n        responseData: html,\r\n        statusCode: HTTP_STATUS_CODE.Ok\r\n    } as IActionResult;\r\n}","import { Global } from \"../global\";\r\n\r\nexport function renderView(vieWname: string, model: any) {\r\n    return Global.viewEngine.render({\r\n        view: vieWname,\r\n        model: model\r\n    });\r\n}"],"sourceRoot":""}