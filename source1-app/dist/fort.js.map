{"version":3,"sources":["webpack://FortJs/webpack/bootstrap","webpack://FortJs/./src/code/index.ts","webpack://FortJs/./src/code/abstracts/index.ts","webpack://FortJs/./src/code/abstracts/controller.ts","webpack://FortJs/./src/code/abstracts/shield.ts","webpack://FortJs/./src/code/abstracts/session_provider.ts","webpack://FortJs/./src/code/helpers/promise.ts","webpack://FortJs/./src/code/constant.ts","webpack://FortJs/./src/code/global.ts","webpack://FortJs/external \"uniqid\"","webpack://FortJs/./src/code/abstracts/guard.ts","webpack://FortJs/./src/code/abstracts/view_engine.ts","webpack://FortJs/./src/code/abstracts/wall.ts","webpack://FortJs/./src/code/decorators/index.ts","webpack://FortJs/./src/code/decorators/worker.ts","webpack://FortJs/./src/code/enums/index.ts","webpack://FortJs/./src/code/enums/mime_type.ts","webpack://FortJs/./src/code/enums/http_method.ts","webpack://FortJs/./src/code/enums/http_status_code.ts","webpack://FortJs/./src/code/route_handler.ts","webpack://FortJs/./src/code/decorators/shields.ts","webpack://FortJs/./src/code/decorators/guards.ts","webpack://FortJs/./src/code/decorators/route.ts","webpack://FortJs/./src/code/decorators/default_worker.ts","webpack://FortJs/./src/code/helpers/index.ts","webpack://FortJs/./src/code/helpers/json_result.ts","webpack://FortJs/./src/code/helpers/text_result.ts","webpack://FortJs/./src/code/helpers/html_result.ts","webpack://FortJs/./src/code/helpers/render_view.ts","webpack://FortJs/./src/code/helpers/is_env_dev.ts","webpack://FortJs/./src/code/helpers/log_helper.ts","webpack://FortJs/./src/code/enums/error_type.ts","webpack://FortJs/./src/code/helpers/download_result.ts","webpack://FortJs/./src/code/helpers/file_result.ts","webpack://FortJs/./src/code/helpers/redirect_result.ts","webpack://FortJs/./src/code/helpers/view_result.ts","webpack://FortJs/./src/code/model/index.ts","webpack://FortJs/./src/code/model/error_handler.ts","webpack://FortJs/./src/code/fort.ts","webpack://FortJs/./src/code/util.ts","webpack://FortJs/./src/code/memory_session_provider.ts","webpack://FortJs/./src/code/request_handler.ts","webpack://FortJs/external \"url\"","webpack://FortJs/./src/code/helpers/parse_cookie.ts","webpack://FortJs/./src/code/model/cookie_manager.ts","webpack://FortJs/./src/code/helpers/parse_match_route.ts","webpack://FortJs/external \"path\"","webpack://FortJs/./src/code/post_handler.ts","webpack://FortJs/./src/code/controller_handler.ts","webpack://FortJs/external \"jsontoxml\"","webpack://FortJs/./src/code/file_handler.ts","webpack://FortJs/./src/code/request_handler_helper.ts","webpack://FortJs/external \"negotiator\"","webpack://FortJs/external \"fs\"","webpack://FortJs/./src/code/helpers/get_mime_type_from_extension.ts","webpack://FortJs/external \"etag\"","webpack://FortJs/./src/code/enums/etag_type.ts","webpack://FortJs/external \"fresh\"","webpack://FortJs/external \"content-type\"","webpack://FortJs/external \"querystring\"","webpack://FortJs/external \"http\""],"names":[],"mappings":"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","file":"fort.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export * from './abstracts/index';\r\nexport * from './decorators/index';\r\nexport * from './interfaces/index';\r\nexport * from './enums';\r\nexport * from './helpers/index';\r\nexport * from './model/index';\r\nexport * from './types/index';\r\nexport * from './fort';","export * from './controller';\r\nexport * from './shield';\r\nexport * from './session_provider';\r\nexport * from './guard';\r\nexport * from './view_engine';\r\nexport * from './wall';","import { IHttpRequest } from \"../interfaces/http_request\";\r\nimport { IHttpResponse } from \"../interfaces/http_response\";\r\nimport { SessionProvider } from \"./session_provider\";\r\nimport { CookieManager } from \"../model/cookie_manager\";\r\nexport abstract class Controller {\r\n    request: IHttpRequest;\r\n    response: IHttpResponse;\r\n    query: { [key: string]: any };\r\n    body: { [key: string]: any };\r\n    session: SessionProvider;\r\n    cookies: CookieManager;\r\n    params: { [key: string]: any };\r\n    data: { [key: string]: any };\r\n}","import { Controller } from \"./controller\";\r\nimport { IHttpRequest } from \"../interfaces/http_request\";\r\nimport { IHttpResponse } from \"../interfaces/http_response\";\r\nimport { SessionProvider } from \"./session_provider\";\r\nimport { CookieManager } from \"../model/cookie_manager\";\r\nimport { HttpResult } from \"../types\";\r\n\r\nexport abstract class Shield implements Controller {\r\n    request: IHttpRequest;\r\n    response: IHttpResponse;\r\n    query: { [key: string]: any };\r\n    body: { [key: string]: any };\r\n    session: SessionProvider;\r\n    cookies: CookieManager;\r\n    params: { [key: string]: any };\r\n    data: { [key: string]: any };\r\n    abstract protect(): Promise<HttpResult>;\r\n}\r\n\r\n","import { ISessionValue } from \"../interfaces/session_value\";\r\nimport { CookieManager } from \"../model/cookie_manager\";\r\nimport { promise } from \"../helpers/promise\";\r\nimport { __AppSessionIdentifier } from \"../constant\";\r\nimport * as getUniqId from \"uniqid\";\r\nimport { Global } from \"../global\";\r\n\r\nexport abstract class SessionProvider {\r\n\r\n    public sessionId: string;\r\n    protected cookies: CookieManager;\r\n\r\n    abstract get(key: string): Promise<ISessionValue>;\r\n    abstract isExist(key: string): Promise<boolean>;\r\n    abstract getAll(): Promise<ISessionValue[]>;\r\n    abstract set(key: string, val: any): Promise<null>;\r\n    abstract setMany(values: ISessionValue[]): Promise<null>;\r\n    abstract remove(key: string): Promise<null>;\r\n\r\n    protected createSession(): Promise<null> {\r\n        return promise((resolve, reject) => {\r\n            const now = new Date();\r\n            this.sessionId = getUniqId();\r\n            this.cookies.addCookie({\r\n                name: __AppSessionIdentifier,\r\n                value: this.sessionId,\r\n                httpOnly: true,\r\n                path: \"/\",\r\n                expires: new Date(now.setMinutes(now.getMinutes() + Global.sessionTimeOut))\r\n            });\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\n","export function promise<T>(callBack: (resolve, reject) => void) {\r\n    return new Promise<T>(callBack);\r\n}","import { Global } from \"./global\";\r\n\r\nexport const __ContentType = \"content-type\";\r\nexport const __AppName = \"fort\";\r\nexport const __AppSessionIdentifier = `${Global.appName}_session_id`;\r\nexport const __Cookie = \"cookie\";\r\nexport const __SetCookie = 'set-cookie';\r\nexport const __CurrentDirectory = process.cwd();\r\nexport const __ContentLength = \"content-length\";","import * as http from \"http\";\r\nimport { GenericSessionProvider } from \"./model/generic_session_provider\";\r\nimport { GenericWall } from \"./model/generic_wall\";\r\nimport { ViewEngine } from \"./abstracts/view_engine\";\r\nimport { ErrorHandler } from \"./model/error_handler\";\r\nimport { EtagOption } from \"./types/etag_option\";\r\n\r\nexport class Global {\r\n    static request: http.IncomingMessage;\r\n    static response: http.ServerResponse;\r\n    static port: number;\r\n    static viewPath: string;\r\n    static shouldParseCookie: boolean;\r\n    static shouldParsePost: boolean;\r\n    static sessionProvider: typeof GenericSessionProvider;\r\n    static sessionTimeOut?: number;\r\n    static viewEngine: ViewEngine;\r\n    static foldersAllowed: string[];\r\n    static walls: typeof GenericWall[] = [];\r\n    static errorHandler: typeof ErrorHandler;\r\n    static defaultPath?: string;\r\n    static connectonKeepAliveTimeout?: number;\r\n\r\n    static appName?: string;\r\n\r\n    static eTag?: EtagOption\r\n}","module.exports = require(\"uniqid\");","import { IHttpRequest } from \"../interfaces/http_request\";\r\nimport { IHttpResponse } from \"../interfaces/http_response\";\r\nimport { SessionProvider } from \"./session_provider\";\r\nimport { CookieManager } from \"../model/cookie_manager\";\r\nimport { Controller } from \"./controller\";\r\nimport { HttpResult } from \"../types\";\r\n\r\nexport abstract class Guard implements Controller {\r\n    request: IHttpRequest;\r\n    response: IHttpResponse;\r\n    query: { [key: string]: any };\r\n    body: { [key: string]: any };\r\n    session: SessionProvider;\r\n    cookies: CookieManager;\r\n    params: { [key: string]: any };\r\n    data: { [key: string]: any };\r\n    abstract check(): Promise<HttpResult>;\r\n}","import { IViewValue } from \"../interfaces/view_option\";\r\n\r\n\r\nexport abstract class ViewEngine {\r\n    abstract render(value: IViewValue): Promise<string>;\r\n}","import { Controller } from \"./controller\";\r\nimport { IHttpRequest } from \"../interfaces/http_request\";\r\nimport { IHttpResponse } from \"../interfaces/http_response\";\r\nimport { SessionProvider } from \"./session_provider\";\r\nimport { CookieManager } from \"../model/cookie_manager\";\r\nimport { HttpResult } from \"../types\";\r\n\r\nexport abstract class Wall implements Controller {\r\n    request: IHttpRequest;\r\n    response: IHttpResponse;\r\n    query: { [key: string]: any };\r\n    body: { [key: string]: any };\r\n    session: SessionProvider;\r\n    cookies: CookieManager;\r\n    params: { [key: string]: any };\r\n    data: { [key: string]: any };\r\n    \r\n    abstract onIncoming(): Promise<HttpResult>;\r\n    async onOutgoing() {\r\n        return null;\r\n    }\r\n}","export * from './worker';\r\nexport * from './shields';\r\nexport * from './guards';\r\nexport * from './route';\r\nexport * from './default_worker';\r\n","import { HTTP_METHOD } from \"../enums\";\r\nimport { RouteHandler } from \"../route_handler\";\r\nimport { IRouteActionInfo } from \"../interfaces/route_action_info\";\r\n\r\nexport function worker(allowedMethods?: HTTP_METHOD[]): MethodDecorator {\r\n    return function (target: any, methodName: string, descriptor: PropertyDescriptor) {\r\n        const className = (target.constructor.name as string);\r\n        const actionInfo: IRouteActionInfo = {\r\n            workerName: methodName,\r\n            methodsAllowed: allowedMethods == null ? [\r\n                HTTP_METHOD.Delete, HTTP_METHOD.Get, HTTP_METHOD.Post, HTTP_METHOD.Patch, HTTP_METHOD.Put\r\n            ] : allowedMethods,\r\n            guards: [],\r\n            pattern: `/${methodName.toLowerCase()}`\r\n        };\r\n        RouteHandler.addWorker(actionInfo, className);\r\n    }\r\n}\r\n","export * from './mime_type';\r\nexport * from './http_method';\r\nexport * from './http_status_code';","export enum MIME_TYPE {\r\n    Text = \"text/plain\",\r\n    Json = \"application/json\",\r\n    Html = \"text/html\",\r\n    FormUrlEncoded = \"application/x-www-form-urlencoded\",\r\n    Css = \"text/css\",\r\n    Csv = \"text/csv\",\r\n    Js = \"application/javascript\",\r\n    Bmp = \"image/bmp\",\r\n    Jpeg = \"image/jpeg\",\r\n    Gif = \"image/gif\",\r\n    Ico = \"image/x-icon\",\r\n    Png = \"image/png\",\r\n    Pdf = \"application/pdf\",\r\n    Svg = \"image/svg+xml\",\r\n    Rtf = \"application/rtf\",\r\n    Xml = \"application/xml\",\r\n    Xls = \"application/vnd.ms-excel\",\r\n    Xlsx = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n    Ttf = \"font/ttf\",\r\n    Woff = \"font/woff\",\r\n    Woff2 = \"font/woff2\",\r\n    Eot = \"application/vnd.ms-fontobject\",\r\n    Otf = \"font/otf\",\r\n    Swf = \"application/x-shockwave-flash\",\r\n    Avi = \"video/avi\",\r\n    FormMultiPart = \"multipart/form-data\"\r\n\r\n}","export enum HTTP_METHOD {\r\n    Get = \"GET\",\r\n    Post = \"POST\",\r\n    Put = \"PUT\",\r\n    Patch = \"PATCH\",\r\n    Delete = \"DELETE\"\r\n};","export enum HTTP_STATUS_CODE {\r\n    BadRequest = 400,\r\n    Unauthorized = 401,\r\n    Forbidden = 403,\r\n    Not_Found = 404,\r\n    Ok = 200,\r\n    Created = 201,\r\n    NoContent = 204,\r\n    Redirect = 302,\r\n    NotModified = 304,\r\n    MethodNotAllowed = 405,\r\n    NotAcceptable = 406,\r\n    InternalServerError = 500,\r\n}","import { IRouteInfo } from \"./interfaces/route_info\";\r\nimport { GenericShield } from \"./model/generic_shield\";\r\nimport { IRouteActionInfo } from \"./interfaces/route_action_info\";\r\nimport { GenericGuard } from \"./model/generic_guard\";\r\nimport { Router } from \"./types/router\";\r\n\r\nconst routerCollection: IRouteInfo[] = [];\r\nexport class RouteHandler {\r\n\r\n    static get routerCollection() {\r\n        return routerCollection;\r\n    }\r\n\r\n    static addToRouterCollection(value: Router) {\r\n        const route = routerCollection.find(x => x.controllerName === value.controller.name);\r\n        if (route == null) {\r\n            routerCollection.push({\r\n                actions: [],\r\n                controller: value.controller as any,\r\n                controllerName: value.controller.name,\r\n                path: value.path,\r\n                shields: []\r\n            });\r\n        }\r\n        else {\r\n            route.controller = value.controller as any;\r\n            route.path = value.path;\r\n            // change pattern value since we have controller name now.\r\n            route.actions.forEach(actionInfo => {\r\n                if (actionInfo.pattern.indexOf(value.path) < 0) {\r\n                    actionInfo.pattern = `/${value.path}${actionInfo.pattern}`;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    static addShields(shields: typeof GenericShield[], className: string) {\r\n        const index = routerCollection.findIndex(x => x.controllerName === className);\r\n        if (index < 0) {\r\n            routerCollection.push({\r\n                actions: [],\r\n                controller: null,\r\n                controllerName: className,\r\n                shields: shields,\r\n                path: null\r\n            });\r\n        }\r\n        else {\r\n            routerCollection[index].shields = shields;\r\n        }\r\n    }\r\n\r\n    static addWorker(newAction: IRouteActionInfo, className: string) {\r\n        const router = routerCollection.find(x => x.controllerName === className);\r\n        if (router == null) {\r\n            routerCollection.push({\r\n                actions: [newAction],\r\n                controller: null,\r\n                controllerName: className,\r\n                shields: [],\r\n                path: null\r\n            });\r\n        }\r\n        else {\r\n            const savedAction = router.actions.find(val => val.workerName === newAction.workerName);\r\n            if (savedAction == null) {\r\n                newAction.pattern = router.path == null ? newAction.pattern : `/${router.path}${newAction.pattern}`;\r\n                router.actions.push(newAction);\r\n            }\r\n            else {\r\n                savedAction.methodsAllowed = newAction.methodsAllowed;\r\n                savedAction.pattern = router.path == null ? savedAction.pattern : `/${router.path}${savedAction.pattern}`;;\r\n            }\r\n        }\r\n    }\r\n\r\n    static addGuards(guards: typeof GenericGuard[], className: string, actionName: string) {\r\n        const index = routerCollection.findIndex(x => x.controllerName === className);\r\n        const pattern = actionName.toLowerCase();\r\n        if (index < 0) {\r\n            routerCollection.push({\r\n                actions: [{\r\n                    workerName: actionName,\r\n                    guards: guards,\r\n                    methodsAllowed: null,\r\n                    pattern: pattern\r\n                }],\r\n                controller: null,\r\n                controllerName: className,\r\n                shields: [],\r\n                path: null\r\n            });\r\n        }\r\n        else {\r\n            const savedAction = routerCollection[index].actions.find(val => val.workerName === actionName);\r\n            if (savedAction == null) {\r\n                routerCollection[index].actions.push({\r\n                    workerName: actionName,\r\n                    guards: guards,\r\n                    methodsAllowed: null,\r\n                    pattern: pattern\r\n                });\r\n            }\r\n            else {\r\n                savedAction.guards = guards;\r\n            }\r\n        }\r\n    }\r\n\r\n    static addPattern(pattern: string, className: string, actionName: string) {\r\n        const router = routerCollection.find(x => x.controllerName === className);\r\n        if (router == null) {\r\n            routerCollection.push({\r\n                actions: [{\r\n                    workerName: actionName,\r\n                    guards: [],\r\n                    methodsAllowed: null,\r\n                    pattern: pattern\r\n                }],\r\n                controller: null,\r\n                controllerName: className,\r\n                shields: [],\r\n                path: null\r\n            });\r\n        }\r\n        else {\r\n            const savedAction = router.actions.find(val => val.workerName === actionName);\r\n            pattern = router.path == null ? pattern : `/${router.path}${pattern}`;\r\n            if (savedAction == null) {\r\n                router.actions.push({\r\n                    workerName: actionName,\r\n                    guards: [],\r\n                    methodsAllowed: null,\r\n                    pattern: pattern\r\n                });\r\n            }\r\n            else {\r\n                savedAction.pattern = pattern;\r\n            }\r\n        }\r\n    }\r\n}","import { Shield } from \"../abstracts\";\r\nimport { RouteHandler } from \"../route_handler\";\r\nimport { GenericShield } from \"../model/generic_shield\";\r\n\r\nexport function shields(shields: typeof Shield[]): ClassDecorator {\r\n    return (target: any) => {\r\n        const className = target.name;\r\n        RouteHandler.addShields(shields as typeof GenericShield[], className);\r\n    };\r\n}","import { RouteHandler } from \"../route_handler\";\r\nimport { GenericGuard } from \"../model/generic_guard\";\r\nimport { Guard } from \"../abstracts/guard\";\r\n\r\nexport function guards(value: typeof Guard[]): MethodDecorator {\r\n    return (function (target: any, methodName: string, descriptor: PropertyDescriptor) {\r\n        const className = (target.constructor.name as string);\r\n        RouteHandler.addGuards(value as typeof GenericGuard[], className, methodName);\r\n    })\r\n}","import { RouteHandler } from \"../route_handler\";\r\n\r\nexport function route(format: string): MethodDecorator {\r\n    return (function (target: any, methodName: string, descriptor: PropertyDescriptor) {\r\n        const className = (target.constructor.name as string);\r\n        RouteHandler.addPattern(format,className,methodName);\r\n    })\r\n}","import { RouteHandler } from \"../route_handler\";\r\nimport { HTTP_METHOD } from \"../enums/http_method\";\r\nimport { IRouteActionInfo } from \"../interfaces/route_action_info\";\r\n\r\nexport function defaultWorker(allowedMethods?: HTTP_METHOD[]): MethodDecorator {\r\n    return function (target: any, methodName: string, descriptor: PropertyDescriptor) {\r\n        const className = (target.constructor.name as string);\r\n        const actionInfo: IRouteActionInfo = {\r\n            workerName: methodName,\r\n            methodsAllowed: allowedMethods == null ? [HTTP_METHOD.Get] : allowedMethods,\r\n            guards: [],\r\n            pattern: \"/\"\r\n        };\r\n        RouteHandler.addWorker(actionInfo, className);\r\n    }\r\n}\r\n","export * from './json_result';\r\nexport * from './text_result';\r\nexport * from './html_result';\r\nexport * from './render_view';\r\nexport * from './download_result';\r\nexport * from './file_result';\r\nexport * from './redirect_result';\r\nexport * from './view_result';","\r\nimport { MIME_TYPE } from \"../enums\";\r\nimport { HTTP_STATUS_CODE } from \"../enums/http_status_code\";\r\nimport { HttpResult } from \"../types/http_result\";\r\n\r\nexport function jsonResult(value: any, statusCode?: HTTP_STATUS_CODE) {\r\n    return {\r\n        contentType: MIME_TYPE.Json,\r\n        responseData: value,\r\n        statusCode: statusCode || HTTP_STATUS_CODE.Ok\r\n    } as HttpResult;\r\n}","import { MIME_TYPE } from \"../enums\";\r\nimport { HTTP_STATUS_CODE } from \"../enums/http_status_code\";\r\nimport { HttpResult } from \"../types/http_result\";\r\n\r\nexport function textResult(text: string, statusCode?: HTTP_STATUS_CODE) {\r\n    return {\r\n        contentType: MIME_TYPE.Text,\r\n        responseData: text,\r\n        statusCode: statusCode || HTTP_STATUS_CODE.Ok\r\n    } as HttpResult;\r\n}","import { MIME_TYPE } from \"../enums\";\r\nimport { HTTP_STATUS_CODE } from \"../enums/http_status_code\";\r\nimport { HttpResult } from \"../types/http_result\";\r\n\r\nexport function htmlResult(html: string, statusCode?: HTTP_STATUS_CODE) {\r\n    return {\r\n        contentType: MIME_TYPE.Html,\r\n        responseData: html,\r\n        statusCode: statusCode || HTTP_STATUS_CODE.Ok\r\n    } as HttpResult;\r\n}","import { Global } from \"../global\";\r\nimport { isEnvDev } from \"./is_env_dev\";\r\nimport { LogHelper } from \"./log_helper\";\r\nimport { ERROR_TYPE } from \"../enums/error_type\";\r\n\r\nexport function renderView(viewName: string, model?: any) {\r\n    if (isEnvDev()) {\r\n        if (Global.viewEngine == null) {\r\n            new LogHelper(ERROR_TYPE.UndefinedViewEngine).throw();\r\n        }\r\n    }\r\n    return Global.viewEngine.render({\r\n        view: viewName,\r\n        model: model\r\n    });\r\n}","export function isEnvDev() {\r\n    return process.env.NODE_ENV === 'development';\r\n}","import { IError } from \"../interfaces/error\";\r\nimport { ERROR_TYPE } from \"../enums/error_type\";\r\n\r\nexport class LogHelper implements IError {\r\n    type: ERROR_TYPE;\r\n    message: string;\r\n    private info_: any;\r\n\r\n    constructor(type: ERROR_TYPE, info?: any) {\r\n        this.type = type;\r\n        this.info_ = info;\r\n        this.message = this.getMsg_();\r\n    }\r\n\r\n    throw() {\r\n        const errMsg = this.get();\r\n        throw JSON.stringify(errMsg);\r\n\r\n    }\r\n\r\n    static log(msg) {\r\n        console.log(msg);\r\n    }\r\n\r\n    logError() {\r\n        console.error(this.get());\r\n    }\r\n\r\n    logWarning() {\r\n        console.warn(this.get());\r\n    }\r\n\r\n    get() {\r\n        return {\r\n            message: this.message,\r\n            type: this.type\r\n        } as IError;\r\n    }\r\n\r\n    private getMsg_() {\r\n        let errMsg: string;\r\n        switch (this.type) {\r\n            case ERROR_TYPE.InvalidControllerName:\r\n                errMsg = `Invalid controller name - '${this.info_}'. Controller name must contain 'controller'.`\r\n                break;\r\n            case ERROR_TYPE.InvalidContentType:\r\n                errMsg = `Content type - '${this.info_}' is not valid. Please create an issue if you think this is valid type.`\r\n                break;\r\n            case ERROR_TYPE.PortInUse:\r\n                errMsg = `Port ${this.info_} is being used by another process.`\r\n                break;\r\n            case ERROR_TYPE.UndefinedViewEngine:\r\n                errMsg = `View engine is not initiated.Initiate the view engine where fort is created.`\r\n                break;\r\n            default:\r\n                errMsg = this.message;\r\n                break;\r\n        }\r\n        return errMsg;\r\n    }\r\n}","export enum ERROR_TYPE {\r\n    InvalidControllerName = \"invalid_controller_name\",\r\n    InvalidContentType = \"invalid_content_type\",\r\n    PortInUse = \"port_in_use\",\r\n    UndefinedViewEngine = \"undefined_view_engine\"\r\n}","\r\nimport { MIME_TYPE } from \"../enums\";\r\nimport { HTTP_STATUS_CODE } from \"../enums/http_status_code\";\r\nimport { HttpResult } from \"../types/http_result\";\r\n\r\nexport function downloadResult(filePath: string, downloadFileName?: string) {\r\n    return {\r\n        statusCode: HTTP_STATUS_CODE.Ok,\r\n        file: {\r\n            filePath: filePath,\r\n            shouldDownload: true,\r\n            alias: downloadFileName\r\n        }\r\n    } as HttpResult;\r\n}","\r\nimport { MIME_TYPE } from \"../enums\";\r\nimport { HTTP_STATUS_CODE } from \"../enums/http_status_code\";\r\nimport { HttpResult } from \"../types/http_result\";\r\n\r\nexport function fileResult(filePath: string) {\r\n    return {\r\n        statusCode: HTTP_STATUS_CODE.Ok,\r\n        file: {\r\n            filePath: filePath\r\n        }\r\n    } as HttpResult;\r\n}","import { MIME_TYPE } from \"../enums\";\r\nimport { HTTP_STATUS_CODE } from \"../enums/http_status_code\";\r\nimport { HttpResult } from \"../types/http_result\";\r\n\r\nexport function redirectResult(url: string) {\r\n    return {\r\n        contentType: MIME_TYPE.Text,\r\n        responseData: url,\r\n        statusCode: HTTP_STATUS_CODE.Redirect,\r\n        shouldRedirect: true\r\n    } as HttpResult;\r\n}","import { renderView } from \"./render_view\";\r\nimport { HttpResult } from \"../types\";\r\nimport { MIME_TYPE, HTTP_STATUS_CODE } from \"../enums\";\r\n\r\nexport async function viewResult(viewName: string, model?: any) {\r\n    const viewData = await renderView(viewName, model);\r\n    return {\r\n        contentType: MIME_TYPE.Html,\r\n        responseData: viewData,\r\n        statusCode: HTTP_STATUS_CODE.Ok\r\n    } as HttpResult;\r\n}","export * from './error_handler';","import { IException } from \"../interfaces/exception\";\r\nimport { promise } from \"../helpers/promise\";\r\n\r\nexport class ErrorHandler {\r\n    onServerError(ex: IException): Promise<string> {\r\n        return promise<string>((resolve, reject) => {\r\n            let errMessage = `<h1>internal server error</h1>\r\n            <h3>message : ${ex.message}</h3>`;\r\n            if (ex.stack) {\r\n                errMessage += `<p><b>stacktrace:</b> ${ex.stack}</p>`\r\n            }\r\n            if (ex.type) {\r\n                errMessage += `<p><b>type:</b> ${ex.type}</p>`\r\n            }\r\n            resolve(errMessage);\r\n        });\r\n    }\r\n\r\n    onBadRequest(ex: IException): Promise<string> {\r\n        return promise<string>((resolve, reject) => {\r\n            let errMessage = `<h1>Bad Request</h1>`;\r\n            if (ex.message) {\r\n                errMessage += ` <h3>message : ${ex.message} </h3>`\r\n            }\r\n            if (ex.stack) {\r\n                errMessage += `<p><b>stacktrace:</b> ${ex.stack}</p>`\r\n            }\r\n            if (ex.type) {\r\n                errMessage += `<p><b>type:</b> ${ex.type}</p>`\r\n            }\r\n            resolve(errMessage);\r\n        });\r\n    }\r\n\r\n    onForbiddenRequest(): Promise<string> {\r\n        return promise<string>((resolve, reject) => {\r\n            let errMessage = `<h1>Forbidden</h1>`;\r\n            resolve(errMessage);\r\n        });\r\n    }\r\n\r\n    onNotAcceptableRequest(): Promise<string> {\r\n        return promise<string>((resolve, reject) => {\r\n            let errMessage = `<h1>Not Acceptable</h1>`;\r\n            resolve(errMessage);\r\n        });\r\n    }\r\n\r\n    onMethodNotAllowed(): Promise<string> {\r\n        return promise<string>((resolve, reject) => {\r\n            let errMessage = `<h1>Method Not allowed.</h1>`;\r\n            resolve(errMessage);\r\n        });\r\n    }\r\n\r\n    onNotFound(url: string): Promise<string> {\r\n        return promise<string>((resolve, reject) => {\r\n            let errMessage = `<h1>The requested resource ${url} was not found.</h1>`;\r\n            resolve(errMessage);\r\n        });\r\n    }\r\n}","import { Router } from \"./types/router\";\r\nimport { Wall } from \"./abstracts\";\r\nimport { AppOption } from \"./types\";\r\nimport { RouteHandler } from \"./route_handler\";\r\nimport { Global } from \"./global\";\r\nimport { Util } from \"./util\";\r\nimport { MemorySessionProvider } from \"./memory_session_provider\";\r\nimport { ErrorHandler } from \"./model/error_handler\";\r\nimport { __AppName } from \"./constant\";\r\nimport { RequestHandler } from \"./request_handler\";\r\nimport * as http from \"http\";\r\nimport { EtagOption } from \"./types/etag_option\";\r\nimport { ETag_Type } from \"./enums/etag_type\";\r\nimport { LogHelper } from \"./helpers/log_helper\";\r\nimport { ERROR_TYPE } from \"./enums/error_type\";\r\nimport { GenericSessionProvider } from \"./model/generic_session_provider\";\r\nimport { promise } from \"./helpers/promise\";\r\n\r\nexport class Fort {\r\n    routers: Router[] = [];\r\n    walls: typeof Wall[] = [];\r\n    httpServer: http.Server;\r\n\r\n    create(option: AppOption) {\r\n        if (option.defaultPath[0] === \"/\") {\r\n            option.defaultPath = option.defaultPath.substr(1);\r\n        }\r\n        this.routers.forEach(route => {\r\n            if (route.path[0] === \"/\") {\r\n                route.path = route.path.substr(1);\r\n            }\r\n            RouteHandler.addToRouterCollection(route);\r\n        });\r\n        const defaultEtagConfig = {\r\n            type: ETag_Type.Weak\r\n        } as EtagOption\r\n        if (option != null) {\r\n            Global.port = Util.isNull(option.port) ? 4000 : option.port;\r\n            Global.viewEngine = option.viewEngine == null ? null : new (option.viewEngine as any)();\r\n            Global.shouldParseCookie = Util.isNull(option.shouldParseCookie) ? true : option.shouldParseCookie;\r\n            Global.shouldParsePost = Util.isNull(option.shouldParsePost) ? true : option.shouldParsePost;\r\n            Global.sessionProvider = Util.isNull(option.sessionProvider) ? MemorySessionProvider as any :\r\n                option.sessionProvider as typeof GenericSessionProvider;\r\n            Global.sessionTimeOut = Util.isNull(option.sessionTimeOut) ? 60 : option.sessionTimeOut;\r\n            Global.foldersAllowed = Util.isNull(option.foldersAllowed) ? [] : option.foldersAllowed;\r\n            Global.errorHandler = Util.isNull(option.errorHandler) ? ErrorHandler : option.errorHandler;\r\n            Global.defaultPath = Util.isNull(option.defaultPath) === true ? \"\" : \"/\" + option.defaultPath.toLowerCase();\r\n            Global.appName = Util.isNullOrEmpty(option.appName) === true ? __AppName : option.appName;\r\n            Global.eTag = option.eTag == null ? defaultEtagConfig : option.eTag;\r\n        }\r\n        else {\r\n            Global.port = 4000;\r\n            Global.shouldParseCookie = true;\r\n            Global.shouldParsePost = true;\r\n            Global.sessionProvider = MemorySessionProvider as any;\r\n            Global.sessionTimeOut = 60;\r\n            Global.foldersAllowed = [];\r\n            Global.errorHandler = ErrorHandler;\r\n            Global.eTag = option.eTag == null ? defaultEtagConfig : option.eTag;\r\n        }\r\n        Global.walls = this.walls as any;\r\n        this.httpServer = http.createServer((req, res) => {\r\n            new RequestHandler(req, res).handle();\r\n        }).listen(Global.port).once(\"error\", (err) => {\r\n            if ((err as any).code === 'EADDRINUSE') {\r\n                new LogHelper(ERROR_TYPE.PortInUse, Global.port).throw();\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        });\r\n    }\r\n\r\n    async destroy() {\r\n        return promise((res, rej) => {\r\n            this.httpServer.close(res);\r\n        });\r\n    }\r\n}","export class Util {\r\n    static isNull(value) {\r\n        return value == null;\r\n    }\r\n\r\n    static isNullOrEmpty(value: string) {\r\n        return value == null || value.length === 0;\r\n    }\r\n\r\n    static isUnDefined(value) {\r\n        return typeof value === \"undefined\";\r\n    }\r\n}","import { SessionProvider } from \"./abstracts\";\r\nimport { ISessionValue } from \"./interfaces/session_value\";\r\nimport { promise } from \"./helpers/promise\";\r\n\r\ninterface ISessionValueFormat {\r\n    identifier: string;\r\n    datas: ISessionValue[]\r\n}\r\n\r\nconst sessionValues: ISessionValueFormat[] = [];\r\n\r\nexport class MemorySessionProvider extends SessionProvider {\r\n\r\n    get(key: string): Promise<ISessionValue> {\r\n        return promise<null>((resolve, reject) => {\r\n            const savedValue = sessionValues.find(q => q.identifier === this.sessionId);\r\n            if (savedValue == null) {\r\n                resolve(false);\r\n            }\r\n            else {\r\n                const value = savedValue.datas.find(qry => qry.key === key);\r\n                resolve(value);\r\n            }\r\n        });\r\n    }\r\n\r\n    isExist(key: string): Promise<boolean> {\r\n        return promise<null>((resolve, reject) => {\r\n            const savedValue = sessionValues.find(q => q.identifier === this.sessionId);\r\n            if (savedValue == null) {\r\n                resolve(false);\r\n            }\r\n            else {\r\n                const index = savedValue.datas.findIndex(qry => qry.key === key);\r\n                resolve(index >= 0);\r\n            }\r\n        });\r\n    }\r\n\r\n    getAll(): Promise<ISessionValue[]> {\r\n        return promise<null>((resolve, reject) => {\r\n            const savedValue = sessionValues.find(q => q.identifier === this.sessionId);\r\n            resolve(savedValue == null ? [] : savedValue.datas);\r\n        });\r\n    }\r\n\r\n    set(key: string, val: any): Promise<null> {\r\n        return promise<null>((resolve, reject) => {\r\n            const savedValue = sessionValues.find(q => q.identifier === this.sessionId);\r\n            if (savedValue == null) {\r\n                this.createSession().then(() => {\r\n                    sessionValues.push({\r\n                        identifier: this.sessionId,\r\n                        datas: [{\r\n                            key: key,\r\n                            value: val\r\n                        }]\r\n                    })\r\n                });\r\n            }\r\n            else {\r\n                savedValue.datas.push({\r\n                    key: key,\r\n                    value: val\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    setMany(values: ISessionValue[]) {\r\n        return promise<null>((resolve, reject) => {\r\n            const promises: Promise<null>[] = [];\r\n            values.forEach(value => {\r\n                promises.push(this.set(value.key, value.value));\r\n            })\r\n            Promise.all(promises).then(results => {\r\n                resolve();\r\n            }).catch(reject);\r\n        });\r\n    }\r\n\r\n    remove(key: string): Promise<null> {\r\n        return promise<null>((resolve, reject) => {\r\n            const savedValue = sessionValues.find(q => q.identifier === this.sessionId);\r\n            if (savedValue != null) {\r\n                const index = savedValue.datas.findIndex(q => q.key === key);\r\n                savedValue.datas.splice(index, 1);\r\n            }\r\n            resolve(null);\r\n        });\r\n    }\r\n}","import * as http from \"http\";\r\nimport * as url from 'url';\r\nimport { Controller } from \"./abstracts/controller\";\r\nimport { __ContentType, __AppName, __Cookie, __AppSessionIdentifier, __SetCookie } from \"./constant\";\r\nimport { Global } from \"./global\";\r\nimport { IHttpRequest } from \"./interfaces/http_request\";\r\nimport { parseCookie } from \"./helpers/parse_cookie\";\r\nimport { CookieManager } from \"./model/cookie_manager\";\r\nimport { IHttpResponse } from \"./interfaces/http_response\";\r\nimport { GenericSessionProvider } from \"./model/generic_session_provider\";\r\nimport { GenericGuard } from \"./model/generic_guard\";\r\nimport { parseAndMatchRoute } from \"./helpers/parse_match_route\";\r\nimport { IRouteMatch } from \"./interfaces/route_match\";\r\nimport * as path from 'path';\r\nimport { Util } from \"./util\";\r\nimport { HTTP_METHOD } from \"./enums/http_method\";\r\nimport { HttpResult } from \"./types\";\r\n\r\nimport { PostHandler } from \"./post_handler\";\r\n\r\nexport class RequestHandler extends PostHandler {\r\n\r\n    private session_: GenericSessionProvider;\r\n    private query_: any;\r\n    private data_ = {};\r\n    private routeMatchInfo_: IRouteMatch;\r\n\r\n\r\n    constructor(request: http.IncomingMessage, response: http.ServerResponse) {\r\n        super();\r\n        this.request = request;\r\n        this.response = response;\r\n        this.registerEvents();\r\n    }\r\n\r\n    private registerEvents() {\r\n        this.request.on('error', this.onBadRequest);\r\n        this.response.on('error', this.onErrorOccured.bind(this));\r\n    }\r\n\r\n    private runWallIncoming_() {\r\n        return Promise.all(Global.walls.map(async (wall) => {\r\n            var wallObj = new wall();\r\n            wallObj.body = this.body;\r\n            wallObj.cookies = this.cookieManager;\r\n            wallObj.query = this.query_;\r\n            wallObj.session = this.session_;\r\n            wallObj.request = this.request as IHttpRequest;\r\n            wallObj.response = this.response as IHttpResponse;\r\n            wallObj.data = this.data_;\r\n            this.wallInstances.push(wallObj);\r\n            return await wallObj.onIncoming();\r\n        }));\r\n    }\r\n\r\n    private runController_() {\r\n        const controllerObj: Controller = new this.routeMatchInfo_.controller();\r\n        controllerObj.request = this.request as IHttpRequest;\r\n        controllerObj.response = this.response;\r\n        controllerObj.query = this.query_;\r\n        controllerObj.body = this.body;\r\n        controllerObj.session = this.session_;\r\n        controllerObj.cookies = this.cookieManager;\r\n        controllerObj.params = this.routeMatchInfo_.params;\r\n        controllerObj.data = this.data_;\r\n        controllerObj[this.routeMatchInfo_.actionInfo.workerName]().then(\r\n            this.onResultEvaluated.bind(this)\r\n        ).catch(this.onErrorOccured.bind(this))\r\n    }\r\n\r\n    private executeShieldsProtection_() {\r\n        return Promise.all(this.routeMatchInfo_.shields.map(async shield => {\r\n            const shieldObj = new shield();\r\n            shieldObj.body = this.body;\r\n            shieldObj.cookies = this.cookieManager;\r\n            shieldObj.query = this.query_;\r\n            shieldObj.session = this.session_;\r\n            shieldObj.request = this.request as IHttpRequest;\r\n            shieldObj.response = this.response as IHttpResponse;\r\n            shieldObj.data = this.data_;\r\n            return await shieldObj.protect();\r\n        }));\r\n    }\r\n\r\n    private executeGuardsCheck_(guards: typeof GenericGuard[]) {\r\n        return Promise.all(guards.map(async guard => {\r\n            const guardObj = new guard();\r\n            guardObj.body = this.body;\r\n            guardObj.cookies = this.cookieManager;\r\n            guardObj.query = this.query_;\r\n            guardObj.session = this.session_;\r\n            guardObj.request = this.request as IHttpRequest;\r\n            guardObj.response = this.response as IHttpResponse;\r\n            guardObj.data = this.data_;\r\n            return await guardObj.check();\r\n        }));\r\n    }\r\n\r\n    private parseCookieFromRequest_() {\r\n        if (Global.shouldParseCookie === true) {\r\n            const rawCookie = this.request.headers[__Cookie] as string;\r\n            const parsedCookies = parseCookie(rawCookie);\r\n            this.session_ = new Global.sessionProvider();\r\n            this.cookieManager = new CookieManager(parsedCookies);\r\n            this.session_.sessionId = parsedCookies[__AppSessionIdentifier];\r\n            this.session_.cookies = this.cookieManager;\r\n        }\r\n    }\r\n\r\n    private async execute_() {\r\n        try {\r\n            this.response.setHeader('X-Powered-By', __AppName);\r\n            this.response.setHeader('Vary', 'Accept-Encoding');\r\n            const wallProtectionResult = await this.runWallIncoming_();\r\n            const responseByWall: HttpResult = wallProtectionResult.find(qry => qry != null);\r\n            if (responseByWall == null) {\r\n                const urlDetail = url.parse(this.request.url, true);\r\n                const pathUrl = urlDetail.pathname.toLowerCase();\r\n                const extension = path.parse(pathUrl).ext;\r\n                const requestMethod = this.request.method as HTTP_METHOD;\r\n                if (!Util.isNullOrEmpty(extension)) {\r\n                    this.handleFileRequest(pathUrl, extension);\r\n                }\r\n                else {\r\n                    this.routeMatchInfo_ = parseAndMatchRoute(pathUrl, requestMethod);\r\n                    if (this.routeMatchInfo_ == null) { // no route matched\r\n                        // it may be a folder then\r\n                        this.handleFileRequestForFolder(pathUrl);\r\n                    }\r\n                    else {\r\n                        const actionInfo = this.routeMatchInfo_.actionInfo;\r\n                        if (actionInfo == null) {\r\n                            this.onMethodNotAllowed(this.routeMatchInfo_.allows);\r\n                        }\r\n                        else {\r\n                            this.query_ = urlDetail.query;\r\n                            this.parseCookieFromRequest_();\r\n                            const shieldProtectionResult = await this.executeShieldsProtection_();\r\n                            const responseByShield = shieldProtectionResult.find(qry => qry != null);\r\n                            if (responseByShield == null) {\r\n                                const guardsCheckResult = await this.executeGuardsCheck_(actionInfo.guards);\r\n                                const responseByGuard = guardsCheckResult.find(qry => qry != null);\r\n                                if (responseByGuard == null) {\r\n                                    this.runController_();\r\n                                }\r\n                                else {\r\n                                    this.onResultEvaluated(responseByGuard);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.onResultEvaluated(responseByShield);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.onResultEvaluated(responseByWall);\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.onErrorOccured(ex);\r\n        }\r\n    }\r\n\r\n    async handle() {\r\n        if (this.request.method === HTTP_METHOD.Get) {\r\n            this.execute_();\r\n        }\r\n        else if (Global.shouldParsePost === true) {\r\n            try {\r\n                const body = await this.handlePostData();\r\n                this.body = body;\r\n                this.execute_();\r\n            }\r\n            catch (ex) {\r\n                this.onBadRequest(ex);\r\n            }\r\n        }\r\n    }\r\n}","module.exports = require(\"url\");","import { Util } from \"../util\";\r\n\r\n\r\nexport function parseCookie(cookie: string): object {\r\n    const value = {};\r\n    if (!Util.isNullOrEmpty(cookie)) {\r\n        cookie.split(';').forEach(function (val) {\r\n            var parts = val.split('=');\r\n            value[parts.shift().trim()] = decodeURI(parts.join('='));\r\n        });\r\n    }\r\n    return value;\r\n}","import { HttpCookie } from \"./http_cookie\";\r\nimport { IHttpCookie } from \"../interfaces/http_cookie\";\r\n\r\nexport class CookieManager {\r\n    private responseCookie_: string[] = [];\r\n    private cookieCollection_: object;\r\n\r\n    constructor(parsedValue: object) {\r\n        this.cookieCollection_ = parsedValue;\r\n    }\r\n\r\n    /**\r\n     * return cookie by name\r\n     *\r\n     * @param {string} name\r\n     * @returns\r\n     * @memberof CookieManager\r\n     */\r\n    getCookie(name: string): HttpCookie {\r\n        return {\r\n            name: name,\r\n            value: this.cookieCollection_[name]\r\n        } as IHttpCookie;\r\n    }\r\n\r\n    /**\r\n     * add cookie\r\n     *\r\n     * @param {HttpCookie} cookie\r\n     * @memberof CookieManager\r\n     */\r\n    addCookie(cookie: HttpCookie) {\r\n        this.cookieCollection_[cookie.name] = cookie.value;\r\n        this.responseCookie_.push(this.getCookieStringFromCookie_(cookie));\r\n    }\r\n\r\n    /**\r\n     * remove cookie\r\n     *\r\n     * @param {string} name\r\n     * @memberof CookieManager\r\n     */\r\n    removeCookie(name: string) {\r\n        this.cookieCollection_[name] = null;\r\n        const now = new Date();\r\n        this.responseCookie_.push(this.getCookieStringFromCookie_({\r\n            name: name,\r\n            value: null,\r\n            expires: new Date(now.setMinutes(now.getMinutes() - 100))\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * collection of http cookie\r\n     *\r\n     * @readonly\r\n     * @memberof CookieManager\r\n     */\r\n    get cookieCollection() {\r\n        return this.cookieCollection_;\r\n    }\r\n\r\n    /**\r\n     * determine whether value exist or not\r\n     *\r\n     * @param {string} name\r\n     * @returns\r\n     * @memberof CookieManager\r\n     */\r\n    isExist(name: string) {\r\n        return this.cookieCollection_[name] != null;\r\n    }\r\n\r\n    private getCookieStringFromCookie_(cookie: HttpCookie) {\r\n        let cookieString = `${cookie.name}=${cookie.value};`\r\n        if (cookie.expires) {\r\n            cookieString += ` Expires =${cookie.expires.toUTCString()};`\r\n        }\r\n        if (cookie.httpOnly === true) {\r\n            cookieString += \" HttpOnly;\"\r\n        }\r\n        if (cookie.maxAge != null) {\r\n            cookieString += ` Max-Age=${cookie.maxAge}`;\r\n        }\r\n        if (cookie.path) {\r\n            cookieString += ` Path=${cookie.path};`\r\n        }\r\n        if (cookie.domain) {\r\n            cookieString += ` Domain=${cookie.path};`\r\n        }\r\n        return cookieString;\r\n    }\r\n}","import { RouteHandler } from \"../route_handler\";\r\nimport { IRouteMatch } from \"../interfaces/route_match\";\r\nimport { Global } from \"../global\";\r\nimport { HTTP_METHOD } from \"../enums\";\r\n\r\n\r\nexport function parseAndMatchRoute(url: string, reqMethod: HTTP_METHOD) {\r\n\r\n    const urlLength = url.length;\r\n    // removing / from url;\r\n    if (url[urlLength - 1] === \"/\") {\r\n        url = url.substr(0, urlLength - 1);\r\n    }\r\n    // add default path if url is /\r\n    if (url === \"\") {\r\n        url += Global.defaultPath;\r\n    }\r\n    const urlParts = url.split(\"/\");\r\n    let matchedRoute: IRouteMatch = {\r\n        allows: []\r\n    } as IRouteMatch;\r\n    const firstPart = urlParts[1];\r\n    const route = RouteHandler.routerCollection.find(qry => qry.path === firstPart);\r\n    if (route != null) {\r\n        matchedRoute.controller = route.controller;\r\n        const urlPartLength = urlParts.length;\r\n        if (urlPartLength === 2) { // url does not have action path\r\n            const pattern = `/${route.path}/`;\r\n            route.actions.every(action => {\r\n                if (action.pattern === pattern) {\r\n                    if (action.methodsAllowed.indexOf(reqMethod) >= 0) {\r\n                        matchedRoute.actionInfo = action;\r\n                        matchedRoute.params = {};\r\n                        matchedRoute.shields = route.shields;\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        matchedRoute.allows = [...matchedRoute.allows, ...action.methodsAllowed];\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n        else {\r\n            route.actions.every(routeActionInfo => {\r\n                const patternSplit = routeActionInfo.pattern.split(\"/\");\r\n                if (urlPartLength === patternSplit.length) {\r\n                    let isMatched = true;\r\n                    const params = {};\r\n                    urlParts.every((urlPart, i) => {\r\n                        const regMatch = patternSplit[i].match(/{(.*)}/);\r\n                        if (regMatch != null) {\r\n                            params[regMatch[1]] = urlPart;\r\n                        }\r\n                        else if (urlPart !== patternSplit[i]) {\r\n                            isMatched = false;\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    if (isMatched === true) {\r\n                        if (routeActionInfo.methodsAllowed.indexOf(reqMethod) >= 0) {\r\n                            matchedRoute.actionInfo = routeActionInfo;\r\n                            matchedRoute.params = params;\r\n                            matchedRoute.shields = route.shields;\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            matchedRoute.allows = [...matchedRoute.allows, ...routeActionInfo.methodsAllowed];\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n        if (matchedRoute.controller == null) {\r\n            return null;\r\n        }\r\n        else if (matchedRoute.actionInfo == null && matchedRoute.allows.length === 0) {\r\n            return null;\r\n        }\r\n        return matchedRoute;\r\n    }\r\n    return null;\r\n}","module.exports = require(\"path\");","import { ControllerHandler } from \"./controller_handler\";\r\nimport { promise } from \"./helpers/promise\";\r\nimport { __ContentType } from \"./constant\";\r\nimport { MIME_TYPE } from \"./enums/mime_type\";\r\nimport * as ContentType from \"content-type\";\r\nimport * as QueryString from 'querystring';\r\n\r\nexport class PostHandler extends ControllerHandler {\r\n    protected body: any;\r\n    protected files = {};\r\n\r\n    protected getPostRawData_() {\r\n        const body = [];\r\n        return promise((res, rej) => {\r\n            this.request.on('data', (chunk) => {\r\n                body.push(chunk);\r\n            }).on('end', () => {\r\n                const bodyBuffer = Buffer.concat(body);\r\n                res(bodyBuffer);\r\n            });\r\n        })\r\n    }\r\n\r\n    protected async handlePostData() {\r\n        try {\r\n            let postData;\r\n            const bodyBuffer = await this.getPostRawData_();\r\n            let contentType = this.request.headers[__ContentType];\r\n            if (contentType != null) {\r\n                contentType = ContentType.parse(contentType).type;\r\n            }\r\n            switch (contentType) {\r\n                case MIME_TYPE.Json:\r\n                    try {\r\n                        postData = JSON.parse(bodyBuffer.toString());\r\n                    }\r\n                    catch (ex) {\r\n                        throw \"Post data is invalid\";\r\n                    }\r\n                    break;\r\n                case MIME_TYPE.Text:\r\n                case MIME_TYPE.Html:\r\n                    postData = bodyBuffer.toString(); break;\r\n                case MIME_TYPE.FormUrlEncoded:\r\n                    postData = QueryString.parse(bodyBuffer.toString()); break;\r\n            }\r\n            return postData;\r\n        }\r\n        catch (ex) {\r\n            throw ex;\r\n        }\r\n    }\r\n}","\r\nimport { HttpResult } from \"./types/http_result\";\r\nimport { __SetCookie, __ContentType } from \"./constant\";\r\nimport { MIME_TYPE } from \"./enums/mime_type\";\r\nimport * as jsontoxml from \"jsontoxml\";\r\nimport { HTTP_STATUS_CODE } from \"./enums/http_status_code\";\r\nimport { FileHandler } from \"./file_handler\";\r\nimport * as path from 'path';\r\n\r\nexport class ControllerHandler extends FileHandler {\r\n    private controllerResult_: HttpResult;\r\n\r\n    private getDataBasedOnMimeType_(mimeType: MIME_TYPE) {\r\n        switch (mimeType) {\r\n            case MIME_TYPE.Json:\r\n                if (typeof this.controllerResult_.responseData === 'object') {\r\n                    return JSON.stringify(this.controllerResult_.responseData);\r\n                }\r\n                return this.controllerResult_.responseData;\r\n            case MIME_TYPE.Xml:\r\n                if (typeof this.controllerResult_.responseData === 'object') {\r\n                    return jsontoxml({\r\n                        document: this.controllerResult_.responseData\r\n                    }, {\r\n                            xmlHeader: true\r\n                        });\r\n                }\r\n                return this.controllerResult_.responseData;\r\n            default:\r\n                return this.controllerResult_.responseData;\r\n\r\n        }\r\n    }\r\n\r\n    private finishResponse_(negotiateMimeType: MIME_TYPE) {\r\n        this.response.writeHead(this.controllerResult_.statusCode || HTTP_STATUS_CODE.Ok,\r\n            { [__ContentType]: negotiateMimeType });\r\n        this.response.end(this.getDataBasedOnMimeType_(negotiateMimeType));\r\n    }\r\n\r\n    private handleRedirectResult_() {\r\n        this.response.setHeader('Location', this.controllerResult_.responseData);\r\n        this.response.writeHead(this.controllerResult_.statusCode || HTTP_STATUS_CODE.Ok,\r\n            { 'Location': this.controllerResult_.responseData });\r\n        this.response.end();\r\n    }\r\n\r\n    private handleFormatResult_() {\r\n        const negotiateMimeType = this.getContentTypeFromNegotiationHavingMultipleTypes(Object.keys(this.controllerResult_.responseFormat) as MIME_TYPE[]);\r\n        const key = Object.keys(this.controllerResult_.responseFormat).find(qry => qry === negotiateMimeType);\r\n        if (key != null) {\r\n            this.controllerResult_.responseData = this.controllerResult_.responseFormat[key]();\r\n            this.finishResponse_(negotiateMimeType);\r\n        }\r\n        else {\r\n            this.onNotAcceptableRequest();\r\n        }\r\n    }\r\n\r\n    private handleFileResult_() {\r\n        const result = this.controllerResult_;\r\n        const parsedPath = path.parse(result.file.filePath);\r\n        if (result.file.shouldDownload === true) {\r\n            const fileName = result.file.alias == null ? parsedPath.name : result.file.alias;\r\n            this.response.setHeader(\r\n                \"Content-Disposition\",\r\n                `attachment;filename=${fileName}${parsedPath.ext}`\r\n            )\r\n        }\r\n        this.handleFileRequestFromAbsolutePath(result.file.filePath, parsedPath.ext);\r\n    }\r\n\r\n    async onResultEvaluated(result: HttpResult) {\r\n        await this.runWallOutgoing();\r\n        this.controllerResult_ = result;\r\n        if (this.cookieManager != null) {\r\n            ((this.cookieManager as any).responseCookie_ as string[]).forEach(value => {\r\n                this.response.setHeader(__SetCookie, value);\r\n            });\r\n        }\r\n        if (result.shouldRedirect == null || result.shouldRedirect == false) {\r\n            if (result.responseFormat == null) {\r\n                if (result.file == null) {\r\n                    const contentType = result.contentType || MIME_TYPE.Text;\r\n                    const negotiateMimeType = this.getContentTypeFromNegotiation(contentType) as MIME_TYPE;\r\n                    if (negotiateMimeType != null) {\r\n                        this.finishResponse_(negotiateMimeType);\r\n                    }\r\n                    else {\r\n                        this.onNotAcceptableRequest();\r\n                    }\r\n                }\r\n                else {\r\n                    this.handleFileResult_();\r\n                }\r\n            }\r\n            else {\r\n                this.handleFormatResult_();\r\n            }\r\n        }\r\n        else {\r\n            this.handleRedirectResult_();\r\n        }\r\n    }\r\n}","module.exports = require(\"jsontoxml\");","import { HTTP_STATUS_CODE } from \"./enums/http_status_code\";\r\nimport { Global } from \"./global\";\r\nimport * as path from \"path\";\r\nimport { __CurrentDirectory, __ContentType } from \"./constant\";\r\nimport { RequestHandlerHelper } from \"./request_handler_helper\";\r\nimport * as Fs from \"fs\";\r\nimport { getMimeTypeFromExtension } from \"./helpers/get_mime_type_from_extension\";\r\nimport { promise } from \"./helpers/promise\";\r\nimport * as etag from \"etag\";\r\nimport { ETag_Type } from \"./enums/etag_type\";\r\nimport * as fresh from \"fresh\";\r\nimport { MIME_TYPE } from \"./enums\";\r\nexport class FileHandler extends RequestHandlerHelper {\r\n\r\n    private getRequiredFolder_(path: string) {\r\n        const splittedValue = path.split(\"/\");\r\n        if (splittedValue.length > 2) {\r\n            return splittedValue[1];\r\n        }\r\n        return splittedValue[1] == \"\" ? \"/\" : splittedValue[1];\r\n    }\r\n\r\n    private getFileStats_(path) {\r\n        return promise<Fs.Stats>((res, rej) => {\r\n            Fs.lstat(path, (err, status) => {\r\n                if (err) {\r\n                    if (err.code === 'ENOENT') {\r\n                        res(null);\r\n                    }\r\n                    else {\r\n                        rej(err);\r\n                    }\r\n                }\r\n                else {\r\n                    res(status);\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    protected async handleFileRequestFromAbsolutePath(absolutePath: string, fileType: string) {\r\n        try {\r\n            let fileInfo = await this.getFileStats_(absolutePath);\r\n            if (fileInfo != null) {\r\n                if (fileInfo.isDirectory() === true) {\r\n                    this.handleFileRequestForFolder_(absolutePath, fileInfo);\r\n                }\r\n                else {\r\n                    this.sendFile_(absolutePath, fileType, fileInfo);\r\n                }\r\n            }\r\n            else {\r\n                this.onNotFound();\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.onErrorOccured(ex);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected handleFileRequest(filePath: string, fileType: string) {\r\n        const folderRequired = this.getRequiredFolder_(filePath);\r\n        if (Global.foldersAllowed.findIndex(qry => qry === folderRequired) >= 0) {\r\n            let absolutePath = path.join(__CurrentDirectory, filePath);\r\n            this.handleFileRequestFromAbsolutePath(absolutePath, fileType);\r\n        }\r\n        else {\r\n            this.onNotFound();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *process folders handling asuuming path is folder.\r\n     * Please check whether the file is folder before calling this function\r\n     *\r\n     * @private\r\n     * @param {string} filePath\r\n     * @param {Fs.Stats} fileInfo\r\n     * @returns\r\n     * @memberof FileHandler\r\n     */\r\n    private async handleFileRequestForFolder_(absolutePath: string, fileInfo: Fs.Stats) {\r\n        try {\r\n            absolutePath = path.join(absolutePath, \"index.html\");\r\n            fileInfo = await this.getFileStats_(absolutePath);\r\n            if (fileInfo != null) {\r\n                const fileType = MIME_TYPE.Html;\r\n                this.sendFile_(absolutePath, fileType, fileInfo);\r\n            }\r\n            else {\r\n                this.onNotFound();\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.onErrorOccured(ex);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected async handleFileRequestForFolder(filePath: string) {\r\n        try {\r\n            const folderRequired = this.getRequiredFolder_(filePath);\r\n            if (Global.foldersAllowed.findIndex(qry => qry === folderRequired) >= 0) {\r\n                let absolutePath = path.join(__CurrentDirectory, filePath);\r\n                try {\r\n                    let fileInfo = await this.getFileStats_(absolutePath);\r\n                    if (fileInfo != null && fileInfo.isDirectory() === true) {\r\n                        this.handleFileRequestForFolder_(absolutePath, fileInfo);\r\n                    }\r\n                    else {\r\n                        this.onNotFound();\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    this.onErrorOccured(ex);\r\n                }\r\n            }\r\n            else {\r\n                this.onNotFound();\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.onErrorOccured(ex);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private isClientHasFreshFile_(lastModified: string, etag: string) {\r\n        return fresh(this.request.headers, {\r\n            'etag': etag,\r\n            'last-modified': lastModified\r\n        })\r\n    }\r\n\r\n    private async sendFile_(path: string, fileType: string, fileInfo: Fs.Stats) {\r\n        try {\r\n            await this.runWallOutgoing();\r\n            let mimeType;\r\n            if (fileType[0] === '.') { // its extension\r\n                mimeType = getMimeTypeFromExtension(fileType);\r\n            }\r\n            else { // mime type\r\n                mimeType = fileType;\r\n            }\r\n            const negotiateMimeType = this.getContentTypeFromNegotiation(mimeType) as MIME_TYPE;\r\n            if (negotiateMimeType != null) {\r\n                const lastModified = fileInfo.mtime.toUTCString();\r\n                const eTagValue = etag(fileInfo, {\r\n                    weak: Global.eTag.type === ETag_Type.Weak\r\n                });\r\n                if (this.isClientHasFreshFile_(lastModified, eTagValue)) { // client has fresh file\r\n                    this.response.statusCode = HTTP_STATUS_CODE.NotModified;\r\n                    this.response.end();\r\n                }\r\n                else {\r\n                    this.response.writeHead(HTTP_STATUS_CODE.Ok, {\r\n                        [__ContentType]: mimeType,\r\n                        'Etag': eTagValue,\r\n                        'Last-Modified': lastModified\r\n                    })\r\n                    const readStream = Fs.createReadStream(path);\r\n                    // Handle non-existent file\r\n                    readStream.on('error', this.onErrorOccured.bind(this));\r\n                    readStream.pipe(this.response);\r\n                }\r\n            }\r\n            else {\r\n                this.onNotAcceptableRequest();\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.onErrorOccured(ex);\r\n        }\r\n        return null;\r\n    }\r\n}","import { HTTP_STATUS_CODE } from \"./enums/http_status_code\";\r\nimport * as http from \"http\";\r\nimport { __ContentType } from \"./constant\";\r\nimport { MIME_TYPE } from \"./enums/mime_type\";\r\nimport { HTTP_METHOD } from \"./enums/http_method\";\r\nimport { Global } from \"./global\";\r\nimport * as Negotiator from \"negotiator\";\r\nimport { CookieManager } from \"./model/cookie_manager\";\r\nimport { Wall } from \"./abstracts/wall\";\r\nimport { IException } from \"./interfaces/exception\";\r\nexport class RequestHandlerHelper {\r\n    protected cookieManager: CookieManager;\r\n    protected response: http.ServerResponse;\r\n    protected request: http.IncomingMessage;\r\n\r\n    protected wallInstances: Wall[] = [];\r\n\r\n    protected async runWallOutgoing() {\r\n        return Promise.all(this.wallInstances.reverse().map(async wallObj => {\r\n            if (wallObj.onOutgoing != null) {\r\n                return await wallObj.onOutgoing();\r\n            }\r\n        }));\r\n    }\r\n\r\n    protected getContentTypeFromNegotiation(type: MIME_TYPE) {\r\n        const negotiator = new Negotiator(this.request);\r\n        let availableTypes: MIME_TYPE[] = this.getAvailableTypes_(type);\r\n        if (availableTypes == null) {\r\n            availableTypes = [type];\r\n        }\r\n        return negotiator.mediaType(availableTypes) as MIME_TYPE;\r\n    }\r\n\r\n    protected getContentTypeFromNegotiationHavingMultipleTypes(types: MIME_TYPE[]) {\r\n        const negotiator = new Negotiator(this.request);\r\n        return negotiator.mediaType(types) as MIME_TYPE;\r\n    }\r\n\r\n    private getAvailableTypes_(type: MIME_TYPE) {\r\n        switch (type) {\r\n            case MIME_TYPE.Json:\r\n            case MIME_TYPE.Xml:\r\n                return [MIME_TYPE.Json, MIME_TYPE.Xml];\r\n            case MIME_TYPE.Html:\r\n            case MIME_TYPE.Css:\r\n            case MIME_TYPE.Csv:\r\n            case MIME_TYPE.Js:\r\n            case MIME_TYPE.Rtf:\r\n            case MIME_TYPE.Text:\r\n                return [MIME_TYPE.Text, MIME_TYPE.Html, MIME_TYPE.Js,\r\n                MIME_TYPE.Css, MIME_TYPE.Rtf, MIME_TYPE.Csv];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected onBadRequest(error) {\r\n\r\n        new Global.errorHandler().onBadRequest(error).then(errMessage => {\r\n            this.response.writeHead(HTTP_STATUS_CODE.BadRequest, { [__ContentType]: MIME_TYPE.Html });\r\n            this.response.end(errMessage);\r\n        }).catch(err => {\r\n            this.response.end(JSON.stringify(err));\r\n        });\r\n    }\r\n\r\n    protected onForbiddenRequest() {\r\n        this.response.writeHead(HTTP_STATUS_CODE.Forbidden, { [__ContentType]: MIME_TYPE.Html });\r\n        new Global.errorHandler().onForbiddenRequest().then(errMessage => {\r\n            this.response.end(errMessage);\r\n        }).catch(err => {\r\n            this.response.end(JSON.stringify(err));\r\n        });\r\n    }\r\n\r\n    protected onNotAcceptableRequest() {\r\n        this.response.writeHead(HTTP_STATUS_CODE.NotAcceptable, { [__ContentType]: MIME_TYPE.Html });\r\n        new Global.errorHandler().onNotAcceptableRequest().then(errMessage => {\r\n            this.response.end(errMessage);\r\n        }).catch(err => {\r\n            this.response.end(JSON.stringify(err));\r\n        });\r\n    }\r\n\r\n    protected onNotFound() {\r\n\r\n        new Global.errorHandler().onNotFound(this.request.url).then(result => {\r\n            this.response.writeHead(HTTP_STATUS_CODE.Not_Found, { [__ContentType]: MIME_TYPE.Html });\r\n            this.response.end(result);\r\n        }).catch(err => {\r\n            this.response.end(JSON.stringify(err));\r\n        })\r\n    }\r\n\r\n    protected onMethodNotAllowed(allowedMethods: HTTP_METHOD[]) {\r\n        new Global.errorHandler().onMethodNotAllowed().then(result => {\r\n            this.response.setHeader(\"Allow\", allowedMethods.join(\",\"));\r\n            this.response.writeHead(HTTP_STATUS_CODE.MethodNotAllowed, { [__ContentType]: MIME_TYPE.Html });\r\n            this.response.end(result);\r\n        }).catch(err => {\r\n            this.response.end(JSON.stringify(err));\r\n        });\r\n    }\r\n\r\n    protected onErrorOccured(error) {\r\n        if (typeof error === 'string') {\r\n            error = {\r\n                message: error\r\n            } as IException\r\n        }\r\n        new Global.errorHandler().onServerError(error).then(result => {\r\n            this.response.writeHead(HTTP_STATUS_CODE.InternalServerError, { [__ContentType]: MIME_TYPE.Html });\r\n            this.response.end(result);\r\n        }).catch(err => {\r\n            this.response.end(JSON.stringify(err));\r\n        });\r\n    }\r\n}","module.exports = require(\"negotiator\");","module.exports = require(\"fs\");","import { MIME_TYPE } from \"../enums\";\r\n\r\nexport function getMimeTypeFromExtension(ext: string): MIME_TYPE {\r\n    switch (ext) {\r\n        case \".htm\":\r\n        case \".html\":\r\n            return MIME_TYPE.Html;\r\n        case \".css\":\r\n            return MIME_TYPE.Css;\r\n        case \".js\":\r\n            return MIME_TYPE.Js;\r\n        case \".png\":\r\n            return MIME_TYPE.Png;\r\n        case \".woff\":\r\n            return MIME_TYPE.Woff;\r\n        case \".woff2\":\r\n            return MIME_TYPE.Woff2;\r\n        case \".json\":\r\n            return MIME_TYPE.Json;\r\n        case \".txt\":\r\n            return MIME_TYPE.Text;\r\n        case \".jpg\":\r\n        case \".jpeg\":\r\n            return MIME_TYPE.Jpeg;\r\n        case \".rtf\":\r\n            return MIME_TYPE.Rtf;\r\n        case \".ttf\":\r\n            return MIME_TYPE.Ttf;\r\n        case \".eot\":\r\n            return MIME_TYPE.Eot;\r\n        case '.otf':\r\n            return MIME_TYPE.Otf;\r\n        case \".swf\":\r\n            return MIME_TYPE.Swf;\r\n        case \".avi\":\r\n            return MIME_TYPE.Avi;\r\n        case \".Svg\":\r\n            return MIME_TYPE.Svg;\r\n        case \".pdf\":\r\n            return MIME_TYPE.Pdf;\r\n        case \".xml\":\r\n            return MIME_TYPE.Xml;\r\n        case \".csv\":\r\n            return MIME_TYPE.Csv;\r\n        case \".xls\":\r\n            return MIME_TYPE.Xls;\r\n        case \".xlsx\":\r\n            return MIME_TYPE.Xlsx;\r\n        case \".bmp\":\r\n            return MIME_TYPE.Bmp;\r\n        case \".gif\":\r\n            return MIME_TYPE.Gif;\r\n        default:\r\n            return \"application/octet-stream\" as MIME_TYPE;\r\n    }\r\n}","module.exports = require(\"etag\");","export enum ETag_Type {\r\n    Strong = \"strong\",\r\n    Weak = \"weak\"\r\n}","module.exports = require(\"fresh\");","module.exports = require(\"content-type\");","module.exports = require(\"querystring\");","module.exports = require(\"http\");"],"sourceRoot":""}